; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\out\spi_lpc17xx.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\out\spi_lpc17xx.d --cpu=Cortex-M3 --apcs=interwork -I.\inc -I.\inc\file_system -I.\inc\IR -IC:\Keil\ARM\RL\TCPnet\Drivers -I.\inc\tcpip -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -DLPC1700 -DFLASH_512 --omf_browse=.\out\spi_lpc17xx.crf src\file_system\SPI_LPC17xx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Init PROC
;;;55     
;;;56     static BOOL Init (void) {
000000  4958              LDR      r1,|L1.356|
;;;57     
;;;58       /* Initialize and enable the SSP Interface module. */
;;;59     
;;;60       LPC_SC->PCONP       |= (1 << 21);           /* Enable power to SSPI0 block */
000002  f8510c6c          LDR      r0,[r1,#-0x6c]
000006  f4401000          ORR      r0,r0,#0x200000
00000a  f8410c6c          STR      r0,[r1,#-0x6c]
;;;61     
;;;62       /* SSEL is GPIO, output set to high. */
;;;63       LPC_GPIO1->FIODIR   |=  (1<<21);            /* P1.21 is output             */
00000e  4a56              LDR      r2,|L1.360|
000010  6a10              LDR      r0,[r2,#0x20]
000012  f4401000          ORR      r0,r0,#0x200000
000016  6210              STR      r0,[r2,#0x20]
;;;64       LPC_GPIO1->FIOPIN   |=  (1<<21);            /* set P1.21 high (SSEL inact.)*/
000018  6b50              LDR      r0,[r2,#0x34]
00001a  f4401000          ORR      r0,r0,#0x200000
00001e  6350              STR      r0,[r2,#0x34]
;;;65       LPC_PINCON->PINSEL3 &= ~(0<<10);             /* P1.21 SSEL (used as GPIO)   */
000020  4852              LDR      r0,|L1.364|
000022  68c3              LDR      r3,[r0,#0xc]
000024  60c3              STR      r3,[r0,#0xc]
;;;66      
;;;67     //  /* P3.26 is SD Card Power Supply Enable Pin [KIT 1768 BIG]*/
;;;68     //  LPC_GPIO3->FIODIR   |=  (1<<26);            /* P3.26 is output             */
;;;69     //  LPC_GPIO3->FIOPIN   &= ~(1<<26);            /* set P3.26 low(enable power) */
;;;70     
;;;71       /* P1.25 is SD Card inserted [KIT 1768 MINI]*/
;;;72       LPC_GPIO1->FIODIR   &=  ~(1<<25);            /* P1.25 is input          */
000026  6a13              LDR      r3,[r2,#0x20]
000028  f0237300          BIC      r3,r3,#0x2000000
00002c  6213              STR      r3,[r2,#0x20]
;;;73       
;;;74       /* SCK, MISO, MOSI are SSP pins. */
;;;75       LPC_PINCON->PINSEL3 &= ~(3UL<<8);          /* P1.20 cleared               */
00002e  68c2              LDR      r2,[r0,#0xc]
000030  f4227240          BIC      r2,r2,#0x300
000034  60c2              STR      r2,[r0,#0xc]
;;;76       LPC_PINCON->PINSEL3 |=  (3UL<<8);          /* P1.20 SCK0                  */
000036  68c2              LDR      r2,[r0,#0xc]
000038  f4427240          ORR      r2,r2,#0x300
00003c  60c2              STR      r2,[r0,#0xc]
;;;77       LPC_PINCON->PINSEL3 &= ~((3<<14) | (3<<16));  /* P1.23, P1.24 cleared        */
00003e  68c2              LDR      r2,[r0,#0xc]
000040  f4223270          BIC      r2,r2,#0x3c000
000044  60c2              STR      r2,[r0,#0xc]
;;;78       LPC_PINCON->PINSEL3 |=  ((3<<14) | (3<<16));  /* P1.23 MISO0, P1.24 MOSI0    */
000046  68c2              LDR      r2,[r0,#0xc]
000048  f4423270          ORR      r2,r2,#0x3c000
00004c  60c2              STR      r2,[r0,#0xc]
;;;79     
;;;80       LPC_SC->PCLKSEL1 &= ~(3<<10);               /* PCLKSP0 = CCLK/4 ( 25MHz)   */
00004e  6fc8              LDR      r0,[r1,#0x7c]
000050  f4206040          BIC      r0,r0,#0xc00
000054  67c8              STR      r0,[r1,#0x7c]
;;;81       LPC_SC->PCLKSEL1 |=  (1<<10);               /* PCLKSP0 = CCLK   (100MHz)   */
000056  6fc8              LDR      r0,[r1,#0x7c]
000058  f4406080          ORR      r0,r0,#0x400
00005c  67c8              STR      r0,[r1,#0x7c]
;;;82     
;;;83       LPC_SSP0->CPSR = 10;                       /* 100MHz / 250 = 400kBit      */
00005e  4844              LDR      r0,|L1.368|
000060  f04f010a          MOV      r1,#0xa
000064  6101              STR      r1,[r0,#0x10]
;;;84                                                   /* maximum of 18MHz is possible*/    
;;;85       LPC_SSP0->CR0  = 0x0007;                    /* 8Bit, CPOL=0, CPHA=0        */
000066  f04f0107          MOV      r1,#7
00006a  6001              STR      r1,[r0,#0]
;;;86       LPC_SSP0->CR1  = 0x0002;                    /* SSP0 enable, master         */
00006c  f04f0102          MOV      r1,#2
000070  6041              STR      r1,[r0,#4]
;;;87     
;;;88       return (__TRUE);
000072  f04f0001          MOV      r0,#1
;;;89     }
000076  4770              BX       lr
;;;90     
                          ENDP

                  UnInit PROC
;;;93     
;;;94     static BOOL UnInit (void) {
000078  483b              LDR      r0,|L1.360|
;;;95       /* Return SSP interface to default state. */
;;;96     
;;;97       LPC_GPIO1->FIODIR   &= ~(1<<21);            /* P1.21 is output             */
00007a  6a01              LDR      r1,[r0,#0x20]
00007c  f4211100          BIC      r1,r1,#0x200000
000080  6201              STR      r1,[r0,#0x20]
;;;98       LPC_PINCON->PINSEL3 &= ~(0<<10);            /* P1.21 SSEL (used as GPIO)   */
000082  483a              LDR      r0,|L1.364|
000084  68c1              LDR      r1,[r0,#0xc]
000086  60c1              STR      r1,[r0,#0xc]
;;;99     
;;;100      LPC_PINCON->PINSEL3 &= ~(3UL<<8);           /* P1.20 cleared               */
000088  68c1              LDR      r1,[r0,#0xc]
00008a  f4217140          BIC      r1,r1,#0x300
00008e  60c1              STR      r1,[r0,#0xc]
;;;101      LPC_PINCON->PINSEL3 &= ~((3<<14) | (3<<16));/* P1.23, P1.24 cleared        */
000090  68c1              LDR      r1,[r0,#0xc]
000092  f4213170          BIC      r1,r1,#0x3c000
000096  60c1              STR      r1,[r0,#0xc]
000098  4836              LDR      r0,|L1.372|
;;;102    
;;;103      LPC_SC->PCLKSEL1 &= ~(3<<10);               /* PCLKSP0 = CCLK/4 ( 25MHz)   */
00009a  6801              LDR      r1,[r0,#0]
00009c  f4216140          BIC      r1,r1,#0xc00
0000a0  6001              STR      r1,[r0,#0]
;;;104    
;;;105      LPC_SSP0->CPSR      &= ~0xFF; 
0000a2  4833              LDR      r0,|L1.368|
0000a4  6901              LDR      r1,[r0,#0x10]
0000a6  f02101ff          BIC      r1,r1,#0xff
0000aa  6101              STR      r1,[r0,#0x10]
;;;106    
;;;107      LPC_SSP0->CR0       &= ~0xFFFF;   
0000ac  6801              LDR      r1,[r0,#0]
0000ae  f36f010f          BFC      r1,#0,#16
0000b2  6001              STR      r1,[r0,#0]
;;;108      LPC_SSP0->CR1       &= ~0x0F;
0000b4  6841              LDR      r1,[r0,#4]
0000b6  f021010f          BIC      r1,r1,#0xf
0000ba  6041              STR      r1,[r0,#4]
;;;109    
;;;110      return (__TRUE);
0000bc  f04f0001          MOV      r0,#1
;;;111    }
0000c0  4770              BX       lr
;;;112    
                          ENDP

                  Send PROC
;;;115    
;;;116    static U8 Send (U8 outb) {
0000c2  492b              LDR      r1,|L1.368|
;;;117      /* Write and Read a byte on SPI interface. */
;;;118    
;;;119      LPC_SSP0->DR = outb;
0000c4  6088              STR      r0,[r1,#8]
                  |L1.198|
;;;120      while (LPC_SSP0->SR & BSY);                 /* Wait for transfer to finish */
0000c6  68c8              LDR      r0,[r1,#0xc]
0000c8  06c0              LSLS     r0,r0,#27
0000ca  d4fc              BMI      |L1.198|
;;;121      return (LPC_SSP0->DR);                      /* Return received value       */
0000cc  6888              LDR      r0,[r1,#8]
0000ce  b2c0              UXTB     r0,r0
;;;122    }
0000d0  4770              BX       lr
;;;123    
                          ENDP

                  SendBuf PROC
;;;126    
;;;127    static BOOL SendBuf (U8 *buf, U32 sz) {
0000d2  b510              PUSH     {r4,lr}
;;;128      /* Send buffer to SPI interface. */
;;;129      U32 i;
;;;130    
;;;131      for (i = 0; i < sz; i++) {
0000d4  2200              MOVS     r2,#0
;;;132        LPC_SSP0->DR = buf[i];
0000d6  4b26              LDR      r3,|L1.368|
0000d8  e006              B        |L1.232|
                  |L1.218|
0000da  5c84              LDRB     r4,[r0,r2]
0000dc  609c              STR      r4,[r3,#8]
                  |L1.222|
;;;133        /* Wait if Tx FIFO is full. */
;;;134        while (!(LPC_SSP0->SR & TNF));
0000de  68dc              LDR      r4,[r3,#0xc]
0000e0  07a4              LSLS     r4,r4,#30
0000e2  d5fc              BPL      |L1.222|
;;;135        LPC_SSP0->DR;
0000e4  689c              LDR      r4,[r3,#8]
0000e6  1c52              ADDS     r2,r2,#1              ;131
                  |L1.232|
0000e8  428a              CMP      r2,r1                 ;131
0000ea  d3f6              BCC      |L1.218|
0000ec  e000              B        |L1.240|
                  |L1.238|
;;;136      }
;;;137      /* Wait until Tx finished, drain Rx FIFO. */
;;;138      while (LPC_SSP0->SR & (BSY | RNE)) {
;;;139        LPC_SSP0->DR;
0000ee  6898              LDR      r0,[r3,#8]
                  |L1.240|
0000f0  68d8              LDR      r0,[r3,#0xc]          ;138
0000f2  f0100f14          TST      r0,#0x14              ;138
0000f6  d1fa              BNE      |L1.238|
;;;140      }		   
;;;141      return (__TRUE);
0000f8  2001              MOVS     r0,#1
;;;142    }
0000fa  bd10              POP      {r4,pc}
;;;143    
                          ENDP

                  RecBuf PROC
;;;146    
;;;147    static BOOL RecBuf (U8 *buf, U32 sz) {
0000fc  b530              PUSH     {r4,r5,lr}
;;;148      /* Receive SPI data to buffer. */
;;;149      U32 i;
;;;150    
;;;151      for (i = 0; i < sz; i++) {
0000fe  2200              MOVS     r2,#0
;;;152        LPC_SSP0->DR = 0xFF; 
000100  4b1b              LDR      r3,|L1.368|
000102  25ff              MOVS     r5,#0xff
000104  e006              B        |L1.276|
                  |L1.262|
000106  609d              STR      r5,[r3,#8]
                  |L1.264|
;;;153        /* Wait while Rx FIFO is empty. */
;;;154        while (!(LPC_SSP0->SR & RNE));
000108  68dc              LDR      r4,[r3,#0xc]
00010a  0764              LSLS     r4,r4,#29
00010c  d5fc              BPL      |L1.264|
;;;155        buf[i] = LPC_SSP0->DR;
00010e  689c              LDR      r4,[r3,#8]
000110  5484              STRB     r4,[r0,r2]
000112  1c52              ADDS     r2,r2,#1              ;151
                  |L1.276|
000114  428a              CMP      r2,r1                 ;151
000116  d3f6              BCC      |L1.262|
;;;156      }
;;;157      return (__TRUE);
000118  2001              MOVS     r0,#1
;;;158    }
00011a  bd30              POP      {r4,r5,pc}
;;;159    
                          ENDP

                  BusSpeed PROC
;;;161    
;;;162    static BOOL BusSpeed (U32 kbaud) {
00011c  f50031ea          ADD      r1,r0,#0x1d400
;;;163      /* Set an SPI clock to required baud rate. */
;;;164      U32 div;
;;;165    
;;;166      div = (__PCLK/1000 + kbaud - 1) / kbaud;
000120  31bf              ADDS     r1,r1,#0xbf
000122  fbb1f0f0          UDIV     r0,r1,r0
;;;167      if (div == 0)   div = 0x02;
000126  b900              CBNZ     r0,|L1.298|
000128  2002              MOVS     r0,#2
                  |L1.298|
;;;168      if (div & 1)    div++;
00012a  07c1              LSLS     r1,r0,#31
00012c  d000              BEQ      |L1.304|
00012e  1c40              ADDS     r0,r0,#1
                  |L1.304|
;;;169      if (div > 0xFE) div = 0xFE;
000130  28fe              CMP      r0,#0xfe
000132  d900              BLS      |L1.310|
000134  20fe              MOVS     r0,#0xfe
                  |L1.310|
;;;170      LPC_SSP0->CPSR = div;
000136  490e              LDR      r1,|L1.368|
000138  6108              STR      r0,[r1,#0x10]
;;;171      return (__TRUE);
00013a  2001              MOVS     r0,#1
;;;172    }
00013c  4770              BX       lr
;;;173    
                          ENDP

                  SetSS PROC
;;;176    
;;;177    static BOOL SetSS (U32 ss) {
00013e  490a              LDR      r1,|L1.360|
;;;178      /* Enable/Disable SPI Chip Select (drive it high or low). */
;;;179    
;;;180      if (ss) {
000140  2800              CMP      r0,#0
;;;181        LPC_GPIO1->FIOPIN |= (1<<21);             /* SSEL is GPIO, set to high.  */
;;;182      }
;;;183      else {
;;;184        LPC_GPIO1->FIOPIN &= ~(1<<21);            /* SSEL is GPIO, set to low.  */
000142  6b48              LDR      r0,[r1,#0x34]
000144  d002              BEQ      |L1.332|
000146  f4401000          ORR      r0,r0,#0x200000       ;181
00014a  e001              B        |L1.336|
                  |L1.332|
00014c  f4201000          BIC      r0,r0,#0x200000
                  |L1.336|
000150  6348              STR      r0,[r1,#0x34]
;;;185      }
;;;186    
;;;187      //<<regis120411
;;;188      ///* Enable/Disable SPI Chip Select (drive it high or low). */
;;;189    
;;;190      //if (ss) {
;;;191        ///* SSEL is GPIO, output set to high. */
;;;192      //  LPC_GPIO0->FIOSET = 1<<16;
;;;193      //} 
;;;194      //else {
;;;195        ///* SSEL is GPIO, output set to low. */
;;;196      //  LPC_GPIO0->FIOCLR = 1<<16;
;;;197      //}
;;;198      return (__TRUE);
000152  2001              MOVS     r0,#1
;;;199    }
000154  4770              BX       lr
;;;200    
                          ENDP

                  CheckMedia PROC
;;;203    
;;;204    static U32 CheckMedia (void) {
000156  4904              LDR      r1,|L1.360|
;;;205      /* Read CardDetect and WriteProtect SD card socket pins. */
;;;206      U32 stat = 0;
000158  2000              MOVS     r0,#0
;;;207     
;;;208    //  /*KIT 1768 BIG*/
;;;209    //  if (!(LPC_GPIO3->FIOPIN & (1 << 25))) {
;;;210    //    /* Card is inserted (CD=0).*/
;;;211    //    stat |= M_INSERTED;
;;;212    //  } 
;;;213    
;;;214     /*KIT 1768 MINI*/
;;;215      if (!(LPC_GPIO1->FIOPIN & (1 << 25))) {
00015a  6b49              LDR      r1,[r1,#0x34]
00015c  0189              LSLS     r1,r1,#6
00015e  d400              BMI      |L1.354|
;;;216        /* Card is inserted (CD=0).*/
;;;217        stat |= M_INSERTED;
000160  2001              MOVS     r0,#1
                  |L1.354|
;;;218      } 
;;;219    
;;;220      //<<regis120411
;;;221      //if (!(LPC_GPIO4->FIOPIN & (1 << 29))) {
;;;222        ///* Card is inserted (CD=0). */
;;;223        //stat |= M_INSERTED;
;;;224      //} 
;;;225    //#if 0
;;;226      //if ((LPC_GPIO4->FIOPIN & (1 << 29))) {
;;;227        ///* Write Protect switch is active (WP=1). */
;;;228        //stat |= M_PROTECTED;
;;;229      //}
;;;230    //#endif
;;;231      return (stat);
;;;232    }
000162  4770              BX       lr
;;;233    
                          ENDP

                  |L1.356|
                          DCD      0x400fc130
                  |L1.360|
                          DCD      0x2009c000
                  |L1.364|
                          DCD      0x4002c000
                  |L1.368|
                          DCD      0x40088000
                  |L1.372|
                          DCD      0x400fc1ac

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  spi0_drv
                          DCD      Init
                          DCD      UnInit
                          DCD      Send
                          DCD      SendBuf
                          DCD      RecBuf
                          DCD      BusSpeed
                          DCD      SetSS
                          DCD      CheckMedia
