; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\out\register.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\out\register.d --cpu=Cortex-M3 --apcs=interwork -I.\inc -I.\inc\file_system -I.\inc\IR -IC:\Keil\ARM\RL\TCPnet\Drivers -I.\inc\tcpip -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -DLPC1700 -DFLASH_512 --omf_browse=.\out\register.crf src\register.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  atualiza_saidas PROC
;;;53     *****************************************************************************/
;;;54     void atualiza_saidas(void)
000000  b570              PUSH     {r4-r6,lr}
;;;55     {
;;;56     	signed int i; 				/*Variavel local*/
;;;57         
;;;58     	#if	REGISTER_START_SEND_MSB 
;;;59     	for(i=QTD_OUTS-1;i>=0;i--)	/*Inclui na compilação loop para enviar todos os bits do MSB ao LSB*/
;;;60     	#endif 
;;;61     
;;;62     	#if	REGISTER_START_SEND_LSB 
;;;63     	for(i=0;i<QTD_OUTS;i++)		/*Inclui na compilação loop para enviar todos os bits do LSB ao MSB*/
;;;64     	#endif   
;;;65        	{
;;;66            	SH(0); 							/*Descida do clock*/
;;;67     		#if	LEDS_PAINEL 
;;;68     		if(ir_state.bit.PwrPainel)		/*Função (leds do painel) ativada?*/
000002  4954              LDR      r1,|L1.340|
000004  2017              MOVS     r0,#0x17              ;59
;;;69     		{
;;;70     			//DS((out_leds & (1<<i)));
;;;71     			/*Liga led apenas se o touch estiver habilitado*/
;;;72     			if(touchEnaDis & (1<<i))
000006  2601              MOVS     r6,#1
000008  780d              LDRB     r5,[r1,#0]            ;68
00000a  684b              LDR      r3,[r1,#4]            ;66
00000c  4952              LDR      r1,|L1.344|
                  |L1.14|
00000e  69ca              LDR      r2,[r1,#0x1c]         ;66
000010  f4424200          ORR      r2,r2,#0x8000         ;66
000014  61ca              STR      r2,[r1,#0x1c]         ;66
000016  07ea              LSLS     r2,r5,#31             ;68
;;;73     			{
;;;74     				DS((out_leds & (1<<i)));
;;;75     			}else
;;;76     				DS(1);	/*Desliga*/
;;;77     		}else
;;;78     		#endif
;;;79     			DS(!(out_leds & (1<<i)));	
000018  fa06f200          LSL      r2,r6,r0
00001c  d006              BEQ      |L1.44|
00001e  4c4f              LDR      r4,|L1.348|
000020  6824              LDR      r4,[r4,#0]            ;72  ; touchEnaDis
000022  4222              TST      r2,r4                 ;72
000024  d01b              BEQ      |L1.94|
000026  421a              TST      r2,r3                 ;74
000028  d119              BNE      |L1.94|
00002a  e001              B        |L1.48|
                  |L1.44|
00002c  421a              TST      r2,r3
00002e  d016              BEQ      |L1.94|
                  |L1.48|
000030  69ca              LDR      r2,[r1,#0x1c]
000032  f0420220          ORR      r2,r2,#0x20
000036  61ca              STR      r2,[r1,#0x1c]
                  |L1.56|
;;;80     		SH(1);   				/*Subida do clock.Armazena bit serialmente*/
000038  698a              LDR      r2,[r1,#0x18]
00003a  f4424200          ORR      r2,r2,#0x8000
00003e  618a              STR      r2,[r1,#0x18]
000040  1e40              SUBS     r0,r0,#1              ;59
000042  d5e4              BPL      |L1.14|
;;;81     	}
;;;82     	/*Pulso de clock para colocar os todos os bits (enviados serialmente) 
;;;83     	  nas saídas paralelas*/
;;;84     	ST(0);   
000044  69c8              LDR      r0,[r1,#0x1c]
000046  f0400040          ORR      r0,r0,#0x40
00004a  61c8              STR      r0,[r1,#0x1c]
;;;85     	ST(1);
00004c  6988              LDR      r0,[r1,#0x18]
00004e  f0400040          ORR      r0,r0,#0x40
000052  6188              STR      r0,[r1,#0x18]
;;;86     	MR(1); 	/*Mantém o reset dos registradores em nivel normal(1)*/
000054  6988              LDR      r0,[r1,#0x18]
000056  f0400010          ORR      r0,r0,#0x10
00005a  6188              STR      r0,[r1,#0x18]
;;;87     
;;;88     }
00005c  bd70              POP      {r4-r6,pc}
                  |L1.94|
00005e  698a              LDR      r2,[r1,#0x18]         ;79
000060  f0420220          ORR      r2,r2,#0x20           ;79
000064  618a              STR      r2,[r1,#0x18]         ;79
000066  e7e7              B        |L1.56|
;;;89     /*****************************************************************************
                          ENDP

                  init_register PROC
;;;16     *****************************************************************************/
;;;17     void init_register(void)
000068  e92d4ff0          PUSH     {r4-r11,lr}
;;;18     {
00006c  b087              SUB      sp,sp,#0x1c
;;;19     	U64 j;
;;;20     	int i,y,num_rand=0;
00006e  2500              MOVS     r5,#0
;;;21     	char seq[24] = {16,17,0,1,2,3,7,6,5,4,19,18,20,21,8,9,10,11,15,14,13,12,23,22}; //Efeito serpente descendo  
000070  2218              MOVS     r2,#0x18
000072  a13b              ADR      r1,|L1.352|
000074  4668              MOV      r0,sp
000076  f7fffffe          BL       __aeabi_memcpy4
;;;22     
;;;23     	for(i=0,y=0;i<48;i++)
00007a  2400              MOVS     r4,#0
;;;24     	{
;;;25     		if(i%2)	
;;;26     			out_leds &= ~(1<<num_rand);		
00007c  4f35              LDR      r7,|L1.340|
00007e  4626              MOV      r6,r4                 ;23
000080  46e9              MOV      r9,sp                 ;21
000082  f04f0c01          MOV      r12,#1
;;;27     		else
;;;28     		{
;;;29     			num_rand = seq[y];
;;;30     			y++;
;;;31     			out_leds |= (1<<num_rand);
;;;32     			atualiza_saidas();
;;;33     			for(j=0;j<1000000;j++);
;;;34     			wdt_feed();	
000086  f04f0aaa          MOV      r10,#0xaa
00008a  f04f4880          MOV      r8,#0x40000000
00008e  f04f0b55          MOV      r11,#0x55
                  |L1.146|
000092  07e0              LSLS     r0,r4,#31             ;25
000094  d005              BEQ      |L1.162|
000096  6879              LDR      r1,[r7,#4]            ;26  ; out_leds
000098  fa0cf005          LSL      r0,r12,r5             ;26
00009c  4381              BICS     r1,r1,r0              ;26
00009e  6079              STR      r1,[r7,#4]            ;26  ; out_leds
0000a0  e018              B        |L1.212|
                  |L1.162|
0000a2  f8195006          LDRB     r5,[r9,r6]            ;29
0000a6  1c76              ADDS     r6,r6,#1              ;30
0000a8  6879              LDR      r1,[r7,#4]            ;31  ; out_leds
0000aa  fa0cf005          LSL      r0,r12,r5             ;31
0000ae  4308              ORRS     r0,r0,r1              ;31
0000b0  6078              STR      r0,[r7,#4]            ;32  ; out_leds
0000b2  f7fffffe          BL       atualiza_saidas
0000b6  2100              MOVS     r1,#0                 ;32
0000b8  4608              MOV      r0,r1                 ;32
0000ba  e002              B        |L1.194|
                  |L1.188|
0000bc  1c49              ADDS     r1,r1,#1              ;33
0000be  f1400000          ADC      r0,r0,#0              ;33
                  |L1.194|
0000c2  4a2d              LDR      r2,|L1.376|
0000c4  1a8a              SUBS     r2,r1,r2              ;33
0000c6  f1700200          SBCS     r2,r0,#0              ;33
0000ca  d3f7              BCC      |L1.188|
0000cc  f888a008          STRB     r10,[r8,#8]
0000d0  f888b008          STRB     r11,[r8,#8]
                  |L1.212|
0000d4  1c64              ADDS     r4,r4,#1              ;23
0000d6  2c30              CMP      r4,#0x30              ;23
0000d8  dbdb              BLT      |L1.146|
;;;35     		}
;;;36     	}
;;;37     	
;;;38     
;;;39     	out_leds = 0xFFFFFFFF;		/*Todos os leds ligados*/
0000da  f04f30ff          MOV      r0,#0xffffffff
;;;40     	atualiza_saidas();
0000de  6078              STR      r0,[r7,#4]  ; out_leds
0000e0  f7fffffe          BL       atualiza_saidas
;;;41     	LED_ATEND(1);
0000e4  4c1c              LDR      r4,|L1.344|
0000e6  69a0              LDR      r0,[r4,#0x18]
0000e8  f0406000          ORR      r0,r0,#0x8000000
0000ec  61a0              STR      r0,[r4,#0x18]
;;;42     	LED_LOGO(1);
0000ee  69a0              LDR      r0,[r4,#0x18]
0000f0  f0405080          ORR      r0,r0,#0x10000000
0000f4  61a0              STR      r0,[r4,#0x18]
0000f6  2000              MOVS     r0,#0
0000f8  4601              MOV      r1,r0
;;;43     	for(j=0;j<6000000;j++);			
0000fa  e002              B        |L1.258|
                  |L1.252|
0000fc  1c40              ADDS     r0,r0,#1
0000fe  f1410100          ADC      r1,r1,#0
                  |L1.258|
000102  4a1e              LDR      r2,|L1.380|
000104  1a82              SUBS     r2,r0,r2
000106  f1710200          SBCS     r2,r1,#0
00010a  d3f7              BCC      |L1.252|
;;;44     	out_leds = 0;				/*Todos os leds desligados*/
00010c  2000              MOVS     r0,#0
;;;45     	atualiza_saidas();
00010e  6078              STR      r0,[r7,#4]  ; out_leds
000110  f7fffffe          BL       atualiza_saidas
;;;46     	LED_ATEND(0);
000114  69e0              LDR      r0,[r4,#0x1c]
000116  f0406000          ORR      r0,r0,#0x8000000
00011a  61e0              STR      r0,[r4,#0x1c]
;;;47     	LED_LOGO(0);	
00011c  69e0              LDR      r0,[r4,#0x1c]
00011e  f0405080          ORR      r0,r0,#0x10000000
000122  61e0              STR      r0,[r4,#0x1c]
;;;48     }
000124  b007              ADD      sp,sp,#0x1c
000126  e8bd8ff0          POP      {r4-r11,pc}
;;;49     
                          ENDP

                  led_task PROC
;;;91     *****************************************************************************/
;;;92     void led_task(void)
00012a  480a              LDR      r0,|L1.340|
;;;93     {
;;;94     	if(!ir_state.bit.PwrPainel)
00012c  7800              LDRB     r0,[r0,#0]  ; ir_state
00012e  07c1              LSLS     r1,r0,#31
;;;95     	{
;;;96     		LED_LOGO(0); 
000130  4809              LDR      r0,|L1.344|
000132  d004              BEQ      |L1.318|
;;;97     	}else
;;;98     		LED_LOGO(1);
000134  6981              LDR      r1,[r0,#0x18]
000136  f0415180          ORR      r1,r1,#0x10000000
00013a  6181              STR      r1,[r0,#0x18]
                  |L1.316|
;;;99     
;;;100    	/*Deixa apenas o led do touch 'power painel' ligado se os leds estiverem desabilitados*/
;;;101    	if(!ir_state.bit.PwrPainel)
;;;102    		out_leds |= (1<<TOUCH_11);
;;;103    
;;;104    	atualiza_saidas();
00013c  e7fe              B        atualiza_saidas
                  |L1.318|
00013e  69c1              LDR      r1,[r0,#0x1c]         ;96
000140  f0415180          ORR      r1,r1,#0x10000000     ;96
000144  61c1              STR      r1,[r0,#0x1c]         ;96
000146  4803              LDR      r0,|L1.340|
000148  6841              LDR      r1,[r0,#4]            ;102  ; out_leds
00014a  f4416100          ORR      r1,r1,#0x800          ;102
00014e  6041              STR      r1,[r0,#4]            ;102  ; out_leds
000150  e7f4              B        |L1.316|
;;;105    }
;;;106    
                          ENDP

000152  0000              DCW      0x0000
                  |L1.340|
                          DCD      ||.data||
                  |L1.344|
                          DCD      0x2009c000
                  |L1.348|
                          DCD      touchEnaDis
                  |L1.352|
000160  101100            DCB      16,17,0
000163  01020307          DCB      1,2,3,"\a",6,5,4,19,18,20,21,"\b\t\n\v",15,14,"\r\f",23,22
000167  06050413
00016b  12141508
00016f  090a0b0f
000173  0e0d0c17
000177  16      
                  |L1.376|
                          DCD      0x000f4240
                  |L1.380|
                          DCD      0x005b8d80

                          AREA ||.data||, DATA, ALIGN=2

                  ir_state
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  out_leds
                          DCD      0x00000000
