; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\out\pwm_ir.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\out\pwm_ir.d --cpu=Cortex-M3 --apcs=interwork -I.\inc -I.\inc\file_system -I.\inc\IR -IC:\Keil\ARM\RL\TCPnet\Drivers -I.\inc\tcpip -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -DLPC1700 -DFLASH_512 --omf_browse=.\out\pwm_ir.crf src\IR\pwm_ir.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  PWM_Set PROC
;;;63     ******************************************************************************/
;;;64     void PWM_Set(uint32_t cycle)
000000  495b              LDR      r1,|L1.368|
;;;65     {
;;;66     	/*Configura PWM*/
;;;67     //	LPC_PWM1->MR0 = cycle;	 
;;;68     //	LPC_PWM1->MR1 = cycle * 5/6;  
;;;69     //	LPC_PWM1->MR2 = cycle * 5/6;  
;;;70     //	LPC_PWM1->MR3 = cycle * 5/6;  
;;;71     //	LPC_PWM1->MR4 = cycle * 5/6;  
;;;72     //	LPC_PWM1->MR5 = cycle * 5/6;  
;;;73     //	LPC_PWM1->MR6 = 0;
;;;74     
;;;75     
;;;76     	LPC_PWM1->MR0 = cycle;	 
000002  6188              STR      r0,[r1,#0x18]
;;;77     	LPC_PWM1->MR1 = cycle/2;		/*50% duty cycle*/  
000004  0840              LSRS     r0,r0,#1
000006  61c8              STR      r0,[r1,#0x1c]
;;;78     	LPC_PWM1->MR2 = cycle/2;  
000008  6208              STR      r0,[r1,#0x20]
;;;79     	LPC_PWM1->MR3 = cycle/2; 
00000a  6248              STR      r0,[r1,#0x24]
;;;80     	LPC_PWM1->MR4 = cycle/2;  
00000c  6408              STR      r0,[r1,#0x40]
;;;81     	LPC_PWM1->MR5 = cycle/2;
00000e  6448              STR      r0,[r1,#0x44]
;;;82     	LPC_PWM1->MR6 = 0;
000010  2000              MOVS     r0,#0
000012  6488              STR      r0,[r1,#0x48]
;;;83     			  
;;;84     	/*The LER will be cleared when the Match 0 takes place, in order to
;;;85     	  load and execute the new value of match registers, all the PWMLERs need to
;;;86     	  reloaded. all PWM latch enabled*/ 
;;;87     	LPC_PWM1->LER = LER0_EN | LER1_EN | LER2_EN; //| LER3_EN | LER4_EN | LER5_EN;
000014  2007              MOVS     r0,#7
000016  6508              STR      r0,[r1,#0x50]
;;;88     }
000018  4770              BX       lr
;;;89     
                          ENDP

                  PWM1_IRQHandler PROC
;;;22     ******************************************************************************/
;;;23     void PWM1_IRQHandler (void) 
00001a  4b55              LDR      r3,|L1.368|
;;;24     {
00001c  b500              PUSH     {lr}
;;;25       	uint32_t regVal;
;;;26       	regVal = LPC_PWM1->IR;
00001e  681a              LDR      r2,[r3,#0]
;;;27       	if ( regVal & MR0_INT )	
000020  07d0              LSLS     r0,r2,#31
000022  d003              BEQ      |L1.44|
;;;28     		PWM_Set(PWM_freq_KHz);
000024  4853              LDR      r0,|L1.372|
000026  6800              LDR      r0,[r0,#0]  ; PWM_freq_KHz
000028  f7fffffe          BL       PWM_Set
                  |L1.44|
;;;29       	LPC_PWM1->IR |= regVal;				 
00002c  6818              LDR      r0,[r3,#0]
00002e  4310              ORRS     r0,r0,r2
000030  6018              STR      r0,[r3,#0]
;;;30       	return;
;;;31     }
000032  bd00              POP      {pc}
;;;32     
                          ENDP

                  PWM_Init PROC
;;;35     ******************************************************************************/
;;;36     void PWM_Init(void)
000034  b530              PUSH     {r4,r5,lr}
;;;37     {
;;;38     	char i=0;
;;;39     								
;;;40     	LPC_PWM1->TCR = TCR_RESET;			/*Counter Reset*/  
000036  4d4e              LDR      r5,|L1.368|
000038  2200              MOVS     r2,#0                 ;38
00003a  2002              MOVS     r0,#2
00003c  6068              STR      r0,[r5,#4]
;;;41     	LPC_PWM1->PR  = 0x00;				/*Prescaler  count frequency:Fpclk*/ 
00003e  4614              MOV      r4,r2
000040  60ea              STR      r2,[r5,#0xc]
;;;42     	LPC_PWM1->MCR = PWMMR0I;			/*Interrupt on PWMMR0, reset on PWMMR0, reset  TC if PWM matches*/ 				
000042  2301              MOVS     r3,#1
000044  616b              STR      r3,[r5,#0x14]
;;;43     	PWM_Set(CARRIER_FREQ_38KHZ);		/*Configura a frequencia do PWM default*/
000046  f2402091          MOV      r0,#0x291
00004a  f7fffffe          BL       PWM_Set
;;;44     	LPC_PWM1->PCR = 0;
00004e  64ec              STR      r4,[r5,#0x4c]
;;;45     	LPC_PWM1->TCR = 0x00;				/*Stop all PWMs*/ 
000050  606c              STR      r4,[r5,#4]
;;;46     
;;;47     	for(i=0;i<3;i++)
;;;48     		LPC_GPIO2->FIODIR |= (1<<i); 	/*P2.0 ....P2.2 como saidas*/
000052  4949              LDR      r1,|L1.376|
                  |L1.84|
000054  6c08              LDR      r0,[r1,#0x40]
000056  fa03f502          LSL      r5,r3,r2
00005a  4328              ORRS     r0,r0,r5
00005c  6408              STR      r0,[r1,#0x40]
00005e  1c52              ADDS     r2,r2,#1              ;47
000060  b2d2              UXTB     r2,r2                 ;47
000062  2a03              CMP      r2,#3                 ;47
000064  d3f6              BCC      |L1.84|
;;;49     	
;;;50     #if USE_IR_OUT_ON_HIGH
;;;51     	LPC_GPIO2->FIOPIN = 0x00;		 	/*Desliga P2.0 ....P2.7*/
000066  654c              STR      r4,[r1,#0x54]
000068  4844              LDR      r0,|L1.380|
00006a  f44f7100          MOV      r1,#0x200
00006e  6001              STR      r1,[r0,#0]
;;;52     #else
;;;53     	LPC_GPIO2->FIOPIN 	|=  (1<<0);
;;;54     	LPC_GPIO2->FIOPIN 	|=  (1<<1);
;;;55     	LPC_GPIO2->FIOPIN 	|=  (1<<2);
;;;56     #endif						
;;;57     
;;;58     	NVIC_EnableIRQ(PWM1_IRQn);
;;;59     }
000070  bd30              POP      {r4,r5,pc}
;;;60     
                          ENDP

                  PWM_Start PROC
;;;92     ******************************************************************************/
;;;93     void PWM_Start(char channel)
000072  b500              PUSH     {lr}
;;;94     {
;;;95     	if(channel == 0 || channel >= 16)
;;;96     	{	
;;;97     //		/*Configura P2.4 para PWM1_5*/
;;;98     //		LPC_PINCON->PINSEL4 &= ~(1<<9); 
;;;99     //		LPC_PINCON->PINSEL4 |=  (1<<8);
;;;100    //		LPC_PWM1->PCR |= PWMENA5;
;;;101    
;;;102    		/*Configura P2.0 para PWM1_1*/
;;;103    		LPC_PINCON->PINSEL4 &= ~(1<<1);  
000074  4942              LDR      r1,|L1.384|
;;;104    		LPC_PINCON->PINSEL4 |=  (1<<0);
;;;105    		LPC_PWM1->PCR |= PWMENA1;
000076  4a3e              LDR      r2,|L1.368|
000078  b108              CBZ      r0,|L1.126|
00007a  2810              CMP      r0,#0x10              ;95
00007c  d318              BCC      |L1.176|
                  |L1.126|
00007e  6908              LDR      r0,[r1,#0x10]         ;103
000080  f0200002          BIC      r0,r0,#2              ;103
000084  6108              STR      r0,[r1,#0x10]         ;103
000086  6908              LDR      r0,[r1,#0x10]         ;104
000088  f0400001          ORR      r0,r0,#1              ;104
00008c  6108              STR      r0,[r1,#0x10]         ;104
00008e  6cd0              LDR      r0,[r2,#0x4c]
000090  f4407000          ORR      r0,r0,#0x200
000094  64d0              STR      r0,[r2,#0x4c]
;;;106    		/*Configura P2.1 para PWM1_2*/
;;;107    		LPC_PINCON->PINSEL4 &= ~(1<<3); 
000096  6908              LDR      r0,[r1,#0x10]
000098  f0200008          BIC      r0,r0,#8
00009c  6108              STR      r0,[r1,#0x10]
;;;108    		LPC_PINCON->PINSEL4 |=  (1<<2);
00009e  6908              LDR      r0,[r1,#0x10]
0000a0  f0400004          ORR      r0,r0,#4
0000a4  6108              STR      r0,[r1,#0x10]
;;;109    		LPC_PWM1->PCR |= PWMENA2;
0000a6  6cd0              LDR      r0,[r2,#0x4c]
0000a8  f4406080          ORR      r0,r0,#0x400
0000ac  64d0              STR      r0,[r2,#0x4c]
;;;110    		/*Configura P2.2 para PWM1_3*/
;;;111    		LPC_PINCON->PINSEL4 &= ~(1<<5); 
;;;112    		LPC_PINCON->PINSEL4 |=  (1<<4);
;;;113    		LPC_PWM1->PCR |= PWMENA3;				
0000ae  e01d              B        |L1.236|
                  |L1.176|
;;;114    								
;;;115    	}else
;;;116    	{
;;;117    		if(channel & (1<<0))
0000b0  07c3              LSLS     r3,r0,#31
0000b2  d00b              BEQ      |L1.204|
;;;118    		{	
;;;119    			/*Configura P2.0 para PWM1_1*/
;;;120    			LPC_PINCON->PINSEL4 &= ~(1<<1);  
0000b4  690b              LDR      r3,[r1,#0x10]
0000b6  f0230302          BIC      r3,r3,#2
0000ba  610b              STR      r3,[r1,#0x10]
;;;121    			LPC_PINCON->PINSEL4 |=  (1<<0);
0000bc  690b              LDR      r3,[r1,#0x10]
0000be  f0430301          ORR      r3,r3,#1
0000c2  610b              STR      r3,[r1,#0x10]
;;;122    			LPC_PWM1->PCR |= PWMENA1;		
0000c4  6cd3              LDR      r3,[r2,#0x4c]
0000c6  f4437300          ORR      r3,r3,#0x200
0000ca  64d3              STR      r3,[r2,#0x4c]
                  |L1.204|
;;;123    		}
;;;124    		if(channel & (1<<1))
0000cc  0783              LSLS     r3,r0,#30
0000ce  d50b              BPL      |L1.232|
;;;125    		{	
;;;126    			/*Configura P2.1 para PWM1_2*/
;;;127    			LPC_PINCON->PINSEL4 &= ~(1<<3); 
0000d0  690b              LDR      r3,[r1,#0x10]
0000d2  f0230308          BIC      r3,r3,#8
0000d6  610b              STR      r3,[r1,#0x10]
;;;128    			LPC_PINCON->PINSEL4 |=  (1<<2);
0000d8  690b              LDR      r3,[r1,#0x10]
0000da  f0430304          ORR      r3,r3,#4
0000de  610b              STR      r3,[r1,#0x10]
;;;129    			LPC_PWM1->PCR |= PWMENA2;		
0000e0  6cd3              LDR      r3,[r2,#0x4c]
0000e2  f4436380          ORR      r3,r3,#0x400
0000e6  64d3              STR      r3,[r2,#0x4c]
                  |L1.232|
;;;130    		}
;;;131    		if(channel & (1<<2))
0000e8  0740              LSLS     r0,r0,#29
0000ea  d50b              BPL      |L1.260|
                  |L1.236|
;;;132    		{	
;;;133    			/*Configura P2.2 para PWM1_3*/
;;;134    			LPC_PINCON->PINSEL4 &= ~(1<<5); 
0000ec  6908              LDR      r0,[r1,#0x10]
0000ee  f0200020          BIC      r0,r0,#0x20
0000f2  6108              STR      r0,[r1,#0x10]
;;;135    			LPC_PINCON->PINSEL4 |=  (1<<4);
0000f4  6908              LDR      r0,[r1,#0x10]
0000f6  f0400010          ORR      r0,r0,#0x10
0000fa  6108              STR      r0,[r1,#0x10]
;;;136    			LPC_PWM1->PCR |= PWMENA3;		
0000fc  6cd0              LDR      r0,[r2,#0x4c]
0000fe  f4406000          ORR      r0,r0,#0x800
000102  64d0              STR      r0,[r2,#0x4c]
                  |L1.260|
;;;137    		}
;;;138    	}
;;;139    
;;;140    	LPC_PWM1->PR  = 0x00;				/*Prescaler  count frequency:Fpclk*/ 
000104  2000              MOVS     r0,#0
000106  60d0              STR      r0,[r2,#0xc]
;;;141    	LPC_PWM1->MCR = PWMMR0I;			/*Interrupt on PWMMR0, reset on PWMMR0, reset  TC if PWM matches*/ 
000108  2001              MOVS     r0,#1
00010a  6150              STR      r0,[r2,#0x14]
;;;142    	PWM_Set(PWM_freq_KHz);				/*Configura a ultima frequencia configurada*/
00010c  4819              LDR      r0,|L1.372|
00010e  6800              LDR      r0,[r0,#0]  ; PWM_freq_KHz
000110  f7fffffe          BL       PWM_Set
;;;143    
;;;144    	/*counter enable, PWM enable*/
;;;145    	LPC_PWM1->TCR = TCR_CNT_EN | TCR_PWM_EN;	 
000114  2009              MOVS     r0,#9
000116  6050              STR      r0,[r2,#4]
;;;146    }
000118  bd00              POP      {pc}
;;;147    
                          ENDP

                  PWM_Stop PROC
;;;150    ******************************************************************************/
;;;151    void PWM_Stop(void)
00011a  4815              LDR      r0,|L1.368|
;;;152    {	
;;;153    	/*Desliga todos os PWMs*/
;;;154    	LPC_PWM1->PCR = 0;
00011c  2100              MOVS     r1,#0
00011e  64c1              STR      r1,[r0,#0x4c]
;;;155    	LPC_PWM1->TCR = 0x00;	
000120  6041              STR      r1,[r0,#4]
;;;156    
;;;157    	/*Configura P2.0 para GPIO*/
;;;158    	LPC_PINCON->PINSEL4 &= ~(1<<1); 
000122  4817              LDR      r0,|L1.384|
000124  6901              LDR      r1,[r0,#0x10]
000126  f0210102          BIC      r1,r1,#2
00012a  6101              STR      r1,[r0,#0x10]
;;;159    	LPC_PINCON->PINSEL4 &= ~(1<<0);
00012c  6901              LDR      r1,[r0,#0x10]
00012e  f0210101          BIC      r1,r1,#1
000132  6101              STR      r1,[r0,#0x10]
;;;160    	 
;;;161    #if USE_IR_OUT_ON_HIGH
;;;162    	LPC_GPIO2->FIOPIN 	&= ~(1<<0);
000134  4910              LDR      r1,|L1.376|
000136  6d4a              LDR      r2,[r1,#0x54]
000138  f0220201          BIC      r2,r2,#1
00013c  654a              STR      r2,[r1,#0x54]
;;;163    #else
;;;164    	LPC_GPIO2->FIOPIN 	|=  (1<<0);
;;;165    #endif
;;;166    	
;;;167    	/*Configura P2.1 para GPIO*/ 
;;;168    	LPC_PINCON->PINSEL4 &= ~(1<<3); 
00013e  6902              LDR      r2,[r0,#0x10]
000140  f0220208          BIC      r2,r2,#8
000144  6102              STR      r2,[r0,#0x10]
;;;169    	LPC_PINCON->PINSEL4 &= ~(1<<2);
000146  6902              LDR      r2,[r0,#0x10]
000148  f0220204          BIC      r2,r2,#4
00014c  6102              STR      r2,[r0,#0x10]
;;;170    
;;;171    #if USE_IR_OUT_ON_HIGH
;;;172    	LPC_GPIO2->FIOPIN 	&= ~(1<<1);
00014e  6d4a              LDR      r2,[r1,#0x54]
000150  f0220202          BIC      r2,r2,#2
000154  654a              STR      r2,[r1,#0x54]
;;;173    #else
;;;174    	LPC_GPIO2->FIOPIN 	|=  (1<<1);
;;;175    #endif 
;;;176    	 
;;;177    	/*Configura P2.2 para GPIO*/
;;;178    	LPC_PINCON->PINSEL4 &= ~(1<<5); 
000156  6902              LDR      r2,[r0,#0x10]
000158  f0220220          BIC      r2,r2,#0x20
00015c  6102              STR      r2,[r0,#0x10]
;;;179    	LPC_PINCON->PINSEL4 &= ~(1<<4);	
00015e  6902              LDR      r2,[r0,#0x10]
000160  f0220210          BIC      r2,r2,#0x10
000164  6102              STR      r2,[r0,#0x10]
;;;180    
;;;181    #if USE_IR_OUT_ON_HIGH
;;;182    	LPC_GPIO2->FIOPIN 	&= ~(1<<2);
000166  6d48              LDR      r0,[r1,#0x54]
000168  f0200004          BIC      r0,r0,#4
00016c  6548              STR      r0,[r1,#0x54]
;;;183    #else
;;;184       	LPC_GPIO2->FIOPIN 	|= (1<<2);
;;;185    #endif
;;;186    								
;;;187    }
00016e  4770              BX       lr
;;;188    /******************************************************************************
                          ENDP

                  |L1.368|
                          DCD      0x40018000
                  |L1.372|
                          DCD      ||.data||
                  |L1.376|
                          DCD      0x2009c000
                  |L1.380|
                          DCD      0xe000e100
                  |L1.384|
                          DCD      0x4002c000

                          AREA ||.data||, DATA, ALIGN=2

                  PWM_freq_KHz
                          DCD      0x00000291
