; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\out\msd_sd_file.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\out\msd_sd_file.d --cpu=Cortex-M3 --apcs=interwork -I.\inc -I.\inc\file_system -I.\inc\IR -IC:\Keil\ARM\RL\TCPnet\Drivers -I.\inc\tcpip -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -DLPC1700 -DFLASH_512 --omf_browse=.\out\msd_sd_file.crf src\file_system\MSD_SD_File.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_u
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  init_msd PROC
;;;34     *****************************************************************************/
;;;35     char init_msd (void) 
000000  b510              PUSH     {r4,lr}
;;;36     {
;;;37       	U32 retv;
;;;38     
;;;39     	printf("[Iniciando sd card]");
000002  a0f9              ADR      r0,|L1.1000|
000004  f7fffffe          BL       __2printf
;;;40       	while ((retv = finit (NULL)) != 0) 
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       finit
00000e  b158              CBZ      r0,|L1.40|
;;;41     	{           /* Wait until the MSD is ready*/
;;;42         	if (retv == 1) 
000010  2801              CMP      r0,#1
000012  d004              BEQ      |L1.30|
;;;43     		{
;;;44           		printf ("...[erro]\r\r");
;;;45     			return 0x01;
;;;46         	}else 
;;;47     		{
;;;48           		printf ("...[nao formatado]\r\r");
000014  a0f9              ADR      r0,|L1.1020|
000016  f7fffffe          BL       __2printf
;;;49     			return 0x02;
00001a  2002              MOVS     r0,#2
;;;50         	}
;;;51       	}
;;;52     	printf("...[ok]\r\r");
;;;53     	fflush(stdout);
;;;54     	return 0x00;
;;;55     }
00001c  bd10              POP      {r4,pc}
                  |L1.30|
00001e  a0fd              ADR      r0,|L1.1044|
000020  f7fffffe          BL       __2printf
000024  2001              MOVS     r0,#1                 ;45
000026  bd10              POP      {r4,pc}
                  |L1.40|
000028  a0fd              ADR      r0,|L1.1056|
00002a  f7fffffe          BL       __2printf
00002e  48ff              LDR      r0,|L1.1068|
000030  f7fffffe          BL       fflush
000034  2000              MOVS     r0,#0                 ;54
000036  bd10              POP      {r4,pc}
;;;56     
                          ENDP

                  fread_line PROC
;;;426    *****************************************************************************/
;;;427    /*__inline */char fread_line(char *ptr, const char *file, char num_line)
000038  e92d41f0          PUSH     {r4-r8,lr}
;;;428    {
00003c  4605              MOV      r5,r0
00003e  4608              MOV      r0,r1
000040  4616              MOV      r6,r2
;;;429    	FILE *f;
;;;430    	char cur_line = 0;
000042  2400              MOVS     r4,#0
;;;431     	int ch;
;;;432    
;;;433    	f = fopen(file,"r");
000044  a1fa              ADR      r1,|L1.1072|
000046  f7fffffe          BL       fopen
00004a  0007              MOVS     r7,r0
;;;434    	if(f == NULL)	
00004c  d00e              BEQ      |L1.108|
00004e  46a0              MOV      r8,r4                 ;430
                  |L1.80|
;;;435    		return 1;
;;;436    	else
;;;437    	{
;;;438    		for(;;)
;;;439    		{
;;;440    			ch = fgetc(f);
000050  4638              MOV      r0,r7
000052  f7fffffe          BL       fgetc
;;;441    
;;;442    			if(ch == EOF)
000056  1c41              ADDS     r1,r0,#1
000058  d00b              BEQ      |L1.114|
;;;443    			{
;;;444    				fclose(f);
;;;445    				return 1;
;;;446    			}
;;;447    
;;;448    			if((cur_line == num_line) && (ch != '\r') && (ch != '\n'))
00005a  42b4              CMP      r4,r6
00005c  d10d              BNE      |L1.122|
00005e  280d              CMP      r0,#0xd
000060  d0f6              BEQ      |L1.80|
000062  280a              CMP      r0,#0xa
000064  d00b              BEQ      |L1.126|
;;;449    			{
;;;450    				*ptr = ch;
000066  f8050b01          STRB     r0,[r5],#1
;;;451    				ptr++;
00006a  e7f1              B        |L1.80|
                  |L1.108|
00006c  2001              MOVS     r0,#1                 ;435
                  |L1.110|
;;;452    			}
;;;453    
;;;454    			if(ch == '\n')
;;;455    			{
;;;456    				*ptr = '\0';
;;;457    				cur_line++;
;;;458    				if(cur_line > num_line)
;;;459    					break;
;;;460    			}
;;;461    		}
;;;462    		fclose(f);
;;;463    	}
;;;464    	return 0;
;;;465    }
00006e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.114|
000072  4638              MOV      r0,r7                 ;444
000074  f7fffffe          BL       fclose
000078  e7f8              B        |L1.108|
                  |L1.122|
00007a  280a              CMP      r0,#0xa               ;454
00007c  d1e8              BNE      |L1.80|
                  |L1.126|
00007e  1c64              ADDS     r4,r4,#1              ;457
000080  b2e4              UXTB     r4,r4                 ;457
000082  f8858000          STRB     r8,[r5,#0]            ;456
000086  42b4              CMP      r4,r6                 ;458
000088  d9e2              BLS      |L1.80|
00008a  4638              MOV      r0,r7                 ;462
00008c  f7fffffe          BL       fclose
000090  2000              MOVS     r0,#0                 ;464
000092  e7ec              B        |L1.110|
;;;466    /*****************************************************************************
                          ENDP

                  read_file_cfg PROC
;;;59     *****************************************************************************/
;;;60     void read_file_cfg(void)
000094  b570              PUSH     {r4-r6,lr}
;;;61     {
;;;62     	FILE *f;
;;;63     	/*
;;;64     		ARQUIVO DE CONFIGURAÇÃO GERAL	
;;;65     	*/
;;;66     	printf("[Open file %s]...",FILE_CFG_CFG);
000096  a1e7              ADR      r1,|L1.1076|
000098  a0e9              ADR      r0,|L1.1088|
00009a  f7fffffe          BL       __2printf
;;;67     	fflush(stdout);
00009e  48e3              LDR      r0,|L1.1068|
0000a0  f7fffffe          BL       fflush
;;;68     	f = fopen(FILE_CFG_CFG,"r");
0000a4  a1e2              ADR      r1,|L1.1072|
0000a6  a0e3              ADR      r0,|L1.1076|
0000a8  f7fffffe          BL       fopen
;;;69     	if(f == NULL)
;;;70     	{	/*Carrega todas as configurações default*/
;;;71     		printf("[not found]\r");
;;;72     		fflush(stdout);
;;;73     		strcpy(cfg.file.mode_func_ar,DEFAULT_MODE_AR);	
0000ac  4de9              LDR      r5,|L1.1108|
;;;74     		strcpy(cfg.file.func_ir_scene,DEFAULT_FUNC_IR_SCENE);
;;;75     
;;;76     		strcpy(type_dim0,DEFAULT_TYPE_DIM0);
0000ae  4cea              LDR      r4,|L1.1112|
0000b0  2800              CMP      r0,#0                 ;69
0000b2  d02f              BEQ      |L1.276|
;;;77     		strcpy(type_dim0,DEFAULT_TYPE_DIM1);
;;;78     		strcpy(type_dim0,DEFAULT_TYPE_DIM2);
;;;79     
;;;80     		strcpy(strTouchEnaDis,DEFAULT_ENA_DIS_TOUCH);		
;;;81     	
;;;82     	}else
;;;83     	{
;;;84     		fclose(f);
0000b4  f7fffffe          BL       fclose
;;;85     		printf("[ok]\r");
0000b8  a0e8              ADR      r0,|L1.1116|
0000ba  f7fffffe          BL       __2printf
;;;86     		fflush(stdout);
0000be  48db              LDR      r0,|L1.1068|
0000c0  f7fffffe          BL       fflush
;;;87     		fread_line(cfg.file.mode_func_ar, FILE_CFG_CFG, LINE_MODE_FUNC_AR);
0000c4  2200              MOVS     r2,#0
0000c6  a1db              ADR      r1,|L1.1076|
0000c8  f1050008          ADD      r0,r5,#8
0000cc  f7fffffe          BL       fread_line
;;;88     		fread_line(cfg.file.func_ir_scene, FILE_CFG_CFG, LINE_FUNC_IR_SCENE);
0000d0  2201              MOVS     r2,#1
0000d2  a1d8              ADR      r1,|L1.1076|
0000d4  f105000b          ADD      r0,r5,#0xb
0000d8  f7fffffe          BL       fread_line
;;;89     
;;;90     		fread_line(type_dim0, FILE_CFG_CFG, LINE_TYPE_DIM0);
0000dc  2202              MOVS     r2,#2
0000de  a1d5              ADR      r1,|L1.1076|
0000e0  1da0              ADDS     r0,r4,#6
0000e2  f7fffffe          BL       fread_line
;;;91     		fread_line(type_dim1, FILE_CFG_CFG, LINE_TYPE_DIM1);
0000e6  2203              MOVS     r2,#3
0000e8  a1d2              ADR      r1,|L1.1076|
0000ea  f1040009          ADD      r0,r4,#9
0000ee  f7fffffe          BL       fread_line
;;;92     		fread_line(type_dim2, FILE_CFG_CFG, LINE_TYPE_DIM2);
0000f2  2204              MOVS     r2,#4
0000f4  a1cf              ADR      r1,|L1.1076|
0000f6  f104000c          ADD      r0,r4,#0xc
0000fa  f7fffffe          BL       fread_line
;;;93     
;;;94     		fread_line(strTouchEnaDis, FILE_CFG_CFG, LINE_ENA_DIS_TOUCH);
0000fe  2205              MOVS     r2,#5
000100  a1cc              ADR      r1,|L1.1076|
000102  48d8              LDR      r0,|L1.1124|
000104  f7fffffe          BL       fread_line
;;;95     		
;;;96     		/*Carrega as configurações default de cada caso, caso aconteça erro */
;;;97     		if(!cfg.file.mode_func_ar[0])
000108  f1a50080          SUB      r0,r5,#0x80
00010c  f8901088          LDRB     r1,[r0,#0x88]  ; cfg
000110  b1b9              CBZ      r1,|L1.322|
000112  e019              B        |L1.328|
                  |L1.276|
000114  a0d4              ADR      r0,|L1.1128|
000116  f7fffffe          BL       __2printf
00011a  48c4              LDR      r0,|L1.1068|
00011c  f7fffffe          BL       fflush
000120  a0d5              ADR      r0,|L1.1144|
000122  8800              LDRH     r0,[r0,#0]            ;73
000124  8128              STRH     r0,[r5,#8]            ;73
000126  a0d4              ADR      r0,|L1.1144|
000128  8800              LDRH     r0,[r0,#0]            ;74
00012a  f8a5000b          STRH     r0,[r5,#0xb]          ;74
00012e  a0d3              ADR      r0,|L1.1148|
000130  8800              LDRH     r0,[r0,#0]            ;76
000132  80e0              STRH     r0,[r4,#6]            ;76
000134  a0d1              ADR      r0,|L1.1148|
000136  8800              LDRH     r0,[r0,#0]            ;77
000138  80e0              STRH     r0,[r4,#6]            ;77
00013a  a0d0              ADR      r0,|L1.1148|
00013c  8800              LDRH     r0,[r0,#0]            ;78
00013e  80e0              STRH     r0,[r4,#6]            ;78
000140  e022              B        |L1.392|
                  |L1.322|
;;;98     			strcpy(cfg.file.mode_func_ar,DEFAULT_MODE_AR); 
000142  a1cd              ADR      r1,|L1.1144|
000144  8809              LDRH     r1,[r1,#0]
000146  8129              STRH     r1,[r5,#8]
                  |L1.328|
;;;99     
;;;100    		if(!cfg.file.func_ir_scene[0])
000148  f890008b          LDRB     r0,[r0,#0x8b]  ; cfg
00014c  b918              CBNZ     r0,|L1.342|
;;;101    			strcpy(cfg.file.func_ir_scene,DEFAULT_FUNC_IR_SCENE); 
00014e  a0ca              ADR      r0,|L1.1144|
000150  8800              LDRH     r0,[r0,#0]
000152  f8a5000b          STRH     r0,[r5,#0xb]
                  |L1.342|
;;;102    
;;;103    		if(!type_dim0[0])
000156  48c0              LDR      r0,|L1.1112|
000158  1d80              ADDS     r0,r0,#6
00015a  7800              LDRB     r0,[r0,#0]  ; type_dim0
00015c  b910              CBNZ     r0,|L1.356|
;;;104    			strcpy(type_dim0,DEFAULT_TYPE_DIM0); 
00015e  a0c7              ADR      r0,|L1.1148|
000160  8800              LDRH     r0,[r0,#0]
000162  80e0              STRH     r0,[r4,#6]
                  |L1.356|
;;;105    
;;;106    		if(!type_dim1[0])
000164  48bc              LDR      r0,|L1.1112|
000166  3009              ADDS     r0,r0,#9
000168  7800              LDRB     r0,[r0,#0]  ; type_dim1
00016a  b918              CBNZ     r0,|L1.372|
;;;107    			strcpy(type_dim1,DEFAULT_TYPE_DIM1);
00016c  a0c3              ADR      r0,|L1.1148|
00016e  8800              LDRH     r0,[r0,#0]
000170  f8a40009          STRH     r0,[r4,#9]
                  |L1.372|
;;;108    
;;;109    		if(!type_dim2[0])
000174  48b8              LDR      r0,|L1.1112|
000176  300c              ADDS     r0,r0,#0xc
000178  7800              LDRB     r0,[r0,#0]  ; type_dim2
00017a  b910              CBNZ     r0,|L1.386|
;;;110    			strcpy(type_dim2,DEFAULT_TYPE_DIM2);
00017c  a0bf              ADR      r0,|L1.1148|
00017e  8800              LDRH     r0,[r0,#0]
000180  81a0              STRH     r0,[r4,#0xc]
                  |L1.386|
;;;111    			 
;;;112    		if(!strTouchEnaDis[0])
000182  48b8              LDR      r0,|L1.1124|
000184  7800              LDRB     r0,[r0,#0]  ; strTouchEnaDis
000186  b918              CBNZ     r0,|L1.400|
                  |L1.392|
;;;113    			strcpy(strTouchEnaDis,DEFAULT_ENA_DIS_TOUCH);	
000188  a1bd              ADR      r1,|L1.1152|
00018a  48b6              LDR      r0,|L1.1124|
00018c  f7fffffe          BL       strcpy
                  |L1.400|
;;;114    	}
;;;115    	
;;;116    	touchEnaDis = atoi(strTouchEnaDis);	
000190  48b4              LDR      r0,|L1.1124|
000192  f7fffffe          BL       atoi
000196  49bd              LDR      r1,|L1.1164|
000198  6008              STR      r0,[r1,#0]  ; touchEnaDis
;;;117    }
00019a  bd70              POP      {r4-r6,pc}
;;;118    /*****************************************************************************
                          ENDP

                  read_cfg_tcp PROC
;;;120    *****************************************************************************/
;;;121    void read_cfg_tcp(void)
00019c  e92d4ff0          PUSH     {r4-r11,lr}
;;;122    {
0001a0  b089              SUB      sp,sp,#0x24
;;;123    	char nibble_lsb=0,nibble_msb=0,i,x,j;//,static_ip[4],car[3],num_rand;
;;;124    	FILE *f;
;;;125    
;;;126    	/*
;;;127    		ARQUIVO DE CONFIGURAÇÃO TCP	
;;;128    	*/
;;;129    	printf("[Open file %s]...",FILE_TCP_CFG);
0001a2  a1bb              ADR      r1,|L1.1168|
0001a4  a0a6              ADR      r0,|L1.1088|
0001a6  f7fffffe          BL       __2printf
;;;130    	fflush(stdout);
0001aa  48a0              LDR      r0,|L1.1068|
0001ac  f7fffffe          BL       fflush
;;;131    	f = fopen(FILE_TCP_CFG,"r");
0001b0  a19f              ADR      r1,|L1.1072|
0001b2  a0b7              ADR      r0,|L1.1168|
0001b4  f7fffffe          BL       fopen
;;;132    	if(f == NULL)
;;;133    	{	/*Carrega todas as configurações default*/
;;;134    		printf("[not found]\r");
;;;135    		fflush(stdout);
;;;136    //		srand(own_hw_adr[0]+own_hw_adr[1]+own_hw_adr[2]+own_hw_adr[3]+own_hw_adr[4]+own_hw_adr[5]);
;;;137    //		inet_aton(DEFAULT_LOC_IP,(U8*)static_ip);
;;;138    //		while(1)
;;;139    //		{
;;;140    //			num_rand = 10 + (rand() % 250);	/*Gera numero aleatorio de 10 - 249. Será o ultimo digito do IP estático*/		
;;;141    //			if(num_rand<250)
;;;142    //				break;		
;;;143    //		}
;;;144    //		
;;;145    //		if(num_rand > 99)
;;;146    //		{
;;;147    //			car[0] = (num_rand / 100); 		
;;;148    //			car[1] = (num_rand % 100)/10;
;;;149    //			car[2] = (num_rand % 100)%10; 
;;;150    //			sprintf(cfg.tcp.static_ip,"%u.%u.%u.%u%u%u\0",static_ip[0],static_ip[1],static_ip[2],car[0],car[1],car[2]);
;;;151    //		}else
;;;152    //		{
;;;153    //			car[0] = num_rand / 10; 		
;;;154    //			car[1] = num_rand % 10;
;;;155    //			sprintf(cfg.tcp.static_ip,"%u.%u.%u.%u%u\0",static_ip[0],static_ip[1],static_ip[2],car[0],car[1]);
;;;156    //		}
;;;157    		
;;;158    		//printf("rand: %u..ip estatico: %s\r\r",num_rand,cfg.tcp.static_ip);
;;;159    		//fflush(stdout);
;;;160    		
;;;161    		strcpy(cfg.tcp.static_ip,DEFAULT_LOC_IP);
0001b8  4fa6              LDR      r7,|L1.1108|
;;;162    		strcpy(cfg.tcp.ip_serv_rem,DEFAULT_REM_IP_SERV);
;;;163    		strcpy(cfg.tcp.port_serv_rem,DEFAULT_REM_PORT_SERV);
;;;164    		strcpy(cfg.tcp.interval_packet_serv,DEFAULT_INTERVAL_PAC_SERV);
;;;165    		strcpy(cfg.tcp.host_name,DEFAULT_HOST_NAME);
;;;166    		strcpy(cfg.tcp.port_serv_loc,DEFAULT_LOC_PORT_SERV);
;;;167    		strcpy(cfg.tcp.port_udp,DEFAULT_PORT_UDP);
;;;168    		//strcpy((char*)cfg.tcp.mac,(const char*)own_hw_adr);
;;;169    		sprintf(cfg.tcp.mac,"%02X.%02X.%02X.%02X.%02X.%02X\0",own_hw_adr[0],own_hw_adr[1],own_hw_adr[2],own_hw_adr[3],own_hw_adr[4],own_hw_adr[5]);
0001ba  4eb8              LDR      r6,|L1.1180|
0001bc  3f80              SUBS     r7,r7,#0x80           ;161
0001be  f1070140          ADD      r1,r7,#0x40           ;162
0001c2  4689              MOV      r9,r1                 ;162
0001c4  3110              ADDS     r1,r1,#0x10           ;163
0001c6  468a              MOV      r10,r1                ;163
0001c8  3920              SUBS     r1,r1,#0x20           ;165
0001ca  468b              MOV      r11,r1                ;165
0001cc  3126              ADDS     r1,r1,#0x26           ;166
0001ce  9100              STR      r1,[sp,#0]            ;167
0001d0  310c              ADDS     r1,r1,#0xc            ;167
0001d2  9101              STR      r1,[sp,#4]
0001d4  3116              ADDS     r1,r1,#0x16
;;;170    		strcpy(cfg.tcp.ip_app,DEFAULT_IP_APP);
0001d6  9104              STR      r1,[sp,#0x10]
0001d8  3910              SUBS     r1,r1,#0x10
;;;171    		strcpy(cfg.tcp.mask,DEFAULT_MASK);
0001da  9105              STR      r1,[sp,#0x14]
0001dc  3958              SUBS     r1,r1,#0x58
;;;172    		strcpy(cfg.tcp.gateway,DEFAULT_GATEWAY);
0001de  9106              STR      r1,[sp,#0x18]
0001e0  3110              ADDS     r1,r1,#0x10
0001e2  9107              STR      r1,[sp,#0x1c]         ;132
0001e4  2800              CMP      r0,#0                 ;132
0001e6  d055              BEQ      |L1.660|
;;;173    
;;;174    		/*O MAC default será o configurado no Net_Config.c*/
;;;175    	}else
;;;176    	{
;;;177    		fclose(f);
0001e8  f7fffffe          BL       fclose
;;;178    		printf("[ok]\r");
0001ec  a09b              ADR      r0,|L1.1116|
0001ee  f7fffffe          BL       __2printf
;;;179    		fflush(stdout);
0001f2  488e              LDR      r0,|L1.1068|
0001f4  f7fffffe          BL       fflush
;;;180    		fread_line(cfg.tcp.static_ip, FILE_TCP_CFG, LINE_STATIC_IP);
0001f8  2200              MOVS     r2,#0
0001fa  a1a5              ADR      r1,|L1.1168|
0001fc  4638              MOV      r0,r7
0001fe  f7fffffe          BL       fread_line
;;;181    		fread_line(cfg.tcp.ip_serv_rem, FILE_TCP_CFG, LINE_IP_SERV_REM);
000202  2201              MOVS     r2,#1
000204  a1a2              ADR      r1,|L1.1168|
000206  4648              MOV      r0,r9
000208  f7fffffe          BL       fread_line
;;;182    		fread_line(cfg.tcp.port_serv_rem, FILE_TCP_CFG, LINE_PORT_SERV_REM);
00020c  2202              MOVS     r2,#2
00020e  a1a0              ADR      r1,|L1.1168|
000210  4650              MOV      r0,r10
000212  f7fffffe          BL       fread_line
;;;183    		fread_line(cfg.tcp.interval_packet_serv, FILE_TCP_CFG, LINE_INTERVAL_PACKET_SERV);
000216  2203              MOVS     r2,#3
000218  a19d              ADR      r1,|L1.1168|
00021a  f107005c          ADD      r0,r7,#0x5c
00021e  f7fffffe          BL       fread_line
;;;184    		fread_line(cfg.tcp.host_name, FILE_TCP_CFG, LINE_HOST_NAME);
000222  2204              MOVS     r2,#4
000224  a19a              ADR      r1,|L1.1168|
000226  4658              MOV      r0,r11
000228  f7fffffe          BL       fread_line
;;;185    		fread_line(cfg.tcp.port_serv_loc, FILE_TCP_CFG, LINE_PORT_SERV_LOC);
00022c  2205              MOVS     r2,#5
00022e  a198              ADR      r1,|L1.1168|
000230  9800              LDR      r0,[sp,#0]
000232  f7fffffe          BL       fread_line
;;;186    		fread_line(cfg.tcp.port_udp, FILE_TCP_CFG, LINE_PORT_UDP);
000236  2206              MOVS     r2,#6
000238  a195              ADR      r1,|L1.1168|
00023a  9801              LDR      r0,[sp,#4]
00023c  f7fffffe          BL       fread_line
;;;187    		fread_line(cfg.tcp.mac, FILE_TCP_CFG, LINE_MAC);
000240  2207              MOVS     r2,#7
000242  a193              ADR      r1,|L1.1168|
000244  9804              LDR      r0,[sp,#0x10]
000246  f7fffffe          BL       fread_line
;;;188    		fread_line(cfg.tcp.ip_app, FILE_TCP_CFG, LINE_IP_APP);
00024a  2208              MOVS     r2,#8
00024c  a190              ADR      r1,|L1.1168|
00024e  9805              LDR      r0,[sp,#0x14]
000250  f7fffffe          BL       fread_line
;;;189    		fread_line(cfg.tcp.mask, FILE_TCP_CFG, LINE_MASK);
000254  2209              MOVS     r2,#9
000256  a18e              ADR      r1,|L1.1168|
000258  9806              LDR      r0,[sp,#0x18]
00025a  f7fffffe          BL       fread_line
;;;190    		fread_line(cfg.tcp.gateway, FILE_TCP_CFG, LINE_GATEWAY);
00025e  220a              MOVS     r2,#0xa
000260  a18b              ADR      r1,|L1.1168|
000262  9807              LDR      r0,[sp,#0x1c]
000264  f7fffffe          BL       fread_line
;;;191    
;;;192    		/*Loop para transformar o MAC (contido no sd) em hexadecimal*/
;;;193    		for(i=0,x=0;x<6;i+=2,x++)
000268  2500              MOVS     r5,#0
00026a  462c              MOV      r4,r5
00026c  46b8              MOV      r8,r7                 ;161
                  |L1.622|
;;;194    		{
;;;195    			cfg.tcp.mac[i]   = tolower(cfg.tcp.mac[i]);
00026e  eb080705          ADD      r7,r8,r5
000272  f8170f78          LDRB     r0,[r7,#0x78]!
000276  f7fffffe          BL       tolower
00027a  7038              STRB     r0,[r7,#0]
;;;196    			cfg.tcp.mac[i+1] = tolower(cfg.tcp.mac[i+1]);
00027c  7878              LDRB     r0,[r7,#1]
00027e  f7fffffe          BL       tolower
000282  b2c0              UXTB     r0,r0
000284  7078              STRB     r0,[r7,#1]
;;;197    
;;;198    			nibble_msb = (cfg.tcp.mac[i]   >= 'a' && cfg.tcp.mac[i]   <= 'f') ? cfg.tcp.mac[i]   - 87 : cfg.tcp.mac[i]   - 48;
000286  7839              LDRB     r1,[r7,#0]
000288  f1a10261          SUB      r2,r1,#0x61
00028c  2a05              CMP      r2,#5
00028e  d83f              BHI      |L1.784|
000290  3957              SUBS     r1,r1,#0x57
000292  e03e              B        |L1.786|
                  |L1.660|
000294  a074              ADR      r0,|L1.1128|
000296  f7fffffe          BL       __2printf
00029a  4864              LDR      r0,|L1.1068|
00029c  f7fffffe          BL       fflush
0002a0  486c              LDR      r0,|L1.1108|
0002a2  a17f              ADR      r1,|L1.1184|
0002a4  3880              SUBS     r0,r0,#0x80           ;161
0002a6  f7fffffe          BL       strcpy
0002aa  a181              ADR      r1,|L1.1200|
0002ac  4648              MOV      r0,r9                 ;162
0002ae  f7fffffe          BL       strcpy
0002b2  a183              ADR      r1,|L1.1216|
0002b4  4650              MOV      r0,r10                ;163
0002b6  f7fffffe          BL       strcpy
0002ba  a083              ADR      r0,|L1.1224|
0002bc  a183              ADR      r1,|L1.1228|
0002be  8800              LDRH     r0,[r0,#0]            ;164
0002c0  f8a7005c          STRH     r0,[r7,#0x5c]         ;164
0002c4  4658              MOV      r0,r11                ;165
0002c6  f7fffffe          BL       strcpy
0002ca  a182              ADR      r1,|L1.1236|
0002cc  9800              LDR      r0,[sp,#0]            ;166
0002ce  f7fffffe          BL       strcpy
0002d2  a182              ADR      r1,|L1.1244|
0002d4  9801              LDR      r0,[sp,#4]            ;167
0002d6  f7fffffe          BL       strcpy
0002da  78b0              LDRB     r0,[r6,#2]            ;169  ; own_hw_adr
0002dc  7973              LDRB     r3,[r6,#5]            ;169  ; own_hw_adr
0002de  7932              LDRB     r2,[r6,#4]            ;169  ; own_hw_adr
0002e0  78f1              LDRB     r1,[r6,#3]            ;169  ; own_hw_adr
0002e2  e88d000f          STM      sp,{r0-r3}            ;169
0002e6  7873              LDRB     r3,[r6,#1]            ;169  ; own_hw_adr
0002e8  7832              LDRB     r2,[r6,#0]            ;169  ; own_hw_adr
0002ea  a17e              ADR      r1,|L1.1252|
0002ec  9804              LDR      r0,[sp,#0x10]         ;169
0002ee  f7fffffe          BL       __2sprintf
0002f2  a16f              ADR      r1,|L1.1200|
0002f4  9805              LDR      r0,[sp,#0x14]         ;170
0002f6  f7fffffe          BL       strcpy
0002fa  a182              ADR      r1,|L1.1284|
0002fc  9806              LDR      r0,[sp,#0x18]         ;171
0002fe  f7fffffe          BL       strcpy
000302  9807              LDR      r0,[sp,#0x1c]         ;172
000304  b009              ADD      sp,sp,#0x24           ;172
000306  a16a              ADR      r1,|L1.1200|
000308  e8bd4ff0          POP      {r4-r11,lr}           ;172
00030c  f7ffbffe          B.W      strcpy
                  |L1.784|
000310  3930              SUBS     r1,r1,#0x30
                  |L1.786|
000312  f0010cff          AND      r12,r1,#0xff
;;;199    			nibble_lsb = (cfg.tcp.mac[i+1] >= 'a' && cfg.tcp.mac[i+1] <= 'f') ? cfg.tcp.mac[i+1] - 87 : cfg.tcp.mac[i+1] - 48;
000316  f1a00161          SUB      r1,r0,#0x61
00031a  2905              CMP      r1,#5
00031c  d801              BHI      |L1.802|
00031e  3857              SUBS     r0,r0,#0x57
000320  e000              B        |L1.804|
                  |L1.802|
000322  3830              SUBS     r0,r0,#0x30
                  |L1.804|
000324  b2c7              UXTB     r7,r0
;;;200    
;;;201    			own_hw_adr[x] = 0;
000326  2000              MOVS     r0,#0
000328  5530              STRB     r0,[r6,r4]
00032a  2301              MOVS     r3,#1                 ;181
                  |L1.812|
;;;202    			for(j=0;j<4;j++)	
;;;203    				if(nibble_lsb & (1<<j))
00032c  fa03f100          LSL      r1,r3,r0
000330  4239              TST      r1,r7
000332  d002              BEQ      |L1.826|
;;;204    					own_hw_adr[x] |= (1<<j);
000334  5d32              LDRB     r2,[r6,r4]
000336  430a              ORRS     r2,r2,r1
000338  5532              STRB     r2,[r6,r4]
                  |L1.826|
00033a  1c40              ADDS     r0,r0,#1              ;202
00033c  b2c0              UXTB     r0,r0                 ;202
00033e  2804              CMP      r0,#4                 ;202
000340  d3f4              BCC      |L1.812|
;;;205    
;;;206    			for(j=4;j<8;j++)	
000342  2004              MOVS     r0,#4
                  |L1.836|
;;;207    				if(nibble_msb & (1<<j-4))
000344  1f02              SUBS     r2,r0,#4
000346  fa03f102          LSL      r1,r3,r2
00034a  ea110f0c          TST      r1,r12
00034e  d004              BEQ      |L1.858|
;;;208    					own_hw_adr[x] |= (1<<j);
000350  5d31              LDRB     r1,[r6,r4]
000352  fa03f200          LSL      r2,r3,r0
000356  4311              ORRS     r1,r1,r2
000358  5531              STRB     r1,[r6,r4]
                  |L1.858|
00035a  1c40              ADDS     r0,r0,#1              ;206
00035c  b2c0              UXTB     r0,r0                 ;206
00035e  2808              CMP      r0,#8                 ;206
000360  d3f0              BCC      |L1.836|
000362  1cad              ADDS     r5,r5,#2              ;193
000364  1c64              ADDS     r4,r4,#1              ;193
000366  b2e4              UXTB     r4,r4                 ;193
000368  b2ed              UXTB     r5,r5                 ;193
00036a  2c06              CMP      r4,#6                 ;193
00036c  f4ffaf7f          BCC      |L1.622|
;;;209    
;;;210    //			for(j=0;j<sizeof(cfg.tcp.mac);j++)
;;;211    //				if((cfg.tcp.mac[j] < 'a' || cfg.tcp.mac[j] > 'f') && (cfg.tcp.mac[j] < '0' || cfg.tcp.mac[j] > '9'))
;;;212    //					cfg.tcp.mac[j] = 0;
;;;213    
;;;214    		}
;;;215    
;;;216    		/*Carrega as configurações default de cada caso, caso aconteça erro */
;;;217    		if(!cfg.tcp.static_ip[0]){ printf("[Static IP empty. Loading default]\r");
000370  f8980000          LDRB     r0,[r8,#0]  ; cfg
000374  4644              MOV      r4,r8
000376  b938              CBNZ     r0,|L1.904|
000378  a066              ADR      r0,|L1.1300|
00037a  f7fffffe          BL       __2printf
;;;218    			strcpy(cfg.tcp.static_ip,DEFAULT_LOC_IP); }
00037e  4835              LDR      r0,|L1.1108|
000380  a147              ADR      r1,|L1.1184|
000382  3880              SUBS     r0,r0,#0x80
000384  f7fffffe          BL       strcpy
                  |L1.904|
;;;219    			
;;;220    		if(!cfg.tcp.ip_serv_rem[0]){ printf("[IP server remote empty. Loading default]\r");			
000388  f8940040          LDRB     r0,[r4,#0x40]  ; cfg
00038c  b930              CBNZ     r0,|L1.924|
00038e  a06a              ADR      r0,|L1.1336|
000390  f7fffffe          BL       __2printf
;;;221    			strcpy(cfg.tcp.ip_serv_rem,DEFAULT_REM_IP_SERV); }
000394  a146              ADR      r1,|L1.1200|
000396  4648              MOV      r0,r9
000398  f7fffffe          BL       strcpy
                  |L1.924|
;;;222    
;;;223    		if(!cfg.tcp.port_serv_rem[0]){ printf("[Port server remote empty. Loading default]\r");
00039c  f8940050          LDRB     r0,[r4,#0x50]  ; cfg
0003a0  b930              CBNZ     r0,|L1.944|
0003a2  a070              ADR      r0,|L1.1380|
0003a4  f7fffffe          BL       __2printf
;;;224    			strcpy(cfg.tcp.port_serv_rem,DEFAULT_REM_PORT_SERV); }
0003a8  a145              ADR      r1,|L1.1216|
0003aa  4650              MOV      r0,r10
0003ac  f7fffffe          BL       strcpy
                  |L1.944|
;;;225    
;;;226    		if(!cfg.tcp.interval_packet_serv[0]){ printf("[Interval packet empty. Loading default]\r");
0003b0  f894005c          LDRB     r0,[r4,#0x5c]  ; cfg
0003b4  b930              CBNZ     r0,|L1.964|
0003b6  a077              ADR      r0,|L1.1428|
0003b8  f7fffffe          BL       __2printf
;;;227    			strcpy(cfg.tcp.interval_packet_serv,DEFAULT_INTERVAL_PAC_SERV); }
0003bc  a042              ADR      r0,|L1.1224|
0003be  8800              LDRH     r0,[r0,#0]
0003c0  f8a4005c          STRH     r0,[r4,#0x5c]
                  |L1.964|
;;;228    
;;;229    		if(!cfg.tcp.host_name[0]){ printf("[Host Name empty. Loading default]\r");
0003c4  f8940030          LDRB     r0,[r4,#0x30]  ; cfg
0003c8  b930              CBNZ     r0,|L1.984|
0003ca  a07d              ADR      r0,|L1.1472|
0003cc  f7fffffe          BL       __2printf
;;;230    			strcpy(cfg.tcp.host_name,DEFAULT_HOST_NAME); }
0003d0  a13e              ADR      r1,|L1.1228|
0003d2  4658              MOV      r0,r11
0003d4  f7fffffe          BL       strcpy
                  |L1.984|
;;;231    
;;;232    		if(!cfg.tcp.port_serv_loc[0]) { printf("[Port server local empty. Loading default]\r");
0003d8  f8940056          LDRB     r0,[r4,#0x56]  ; cfg
0003dc  b918              CBNZ     r0,|L1.998|
0003de  a081              ADR      r0,|L1.1508|
0003e0  f7fffffe          BL       __2printf
;;;233    			strcpy(cfg.tcp.port_serv_loc,DEFAULT_LOC_PORT_SERV); }
0003e4  e114              B        |L1.1552|
                  |L1.998|
0003e6  e118              B        |L1.1562|
                  |L1.1000|
0003e8  5b496e69          DCB      "[Iniciando sd card]",0
0003ec  6369616e
0003f0  646f2073
0003f4  64206361
0003f8  72645d00
                  |L1.1020|
0003fc  2e2e2e5b          DCB      "...[nao formatado]\r\r",0
000400  6e616f20
000404  666f726d
000408  61746164
00040c  6f5d0d0d
000410  00      
000411  00                DCB      0
000412  00                DCB      0
000413  00                DCB      0
                  |L1.1044|
000414  2e2e2e5b          DCB      "...[erro]\r\r",0
000418  6572726f
00041c  5d0d0d00
                  |L1.1056|
000420  2e2e2e5b          DCB      "...[ok]\r\r",0
000424  6f6b5d0d
000428  0d00    
00042a  00                DCB      0
00042b  00                DCB      0
                  |L1.1068|
                          DCD      __stdout
                  |L1.1072|
000430  7200              DCB      "r",0
000432  00                DCB      0
000433  00                DCB      0
                  |L1.1076|
000434  6366672e          DCB      "cfg.cfg",0
000438  63666700
00043c  00                DCB      0
00043d  00                DCB      0
00043e  00                DCB      0
00043f  00                DCB      0
                  |L1.1088|
000440  5b4f7065          DCB      "[Open file %s]...",0
000444  6e206669
000448  6c652025
00044c  735d2e2e
000450  2e00    
000452  00                DCB      0
000453  00                DCB      0
                  |L1.1108|
                          DCD      ||.bss||+0x80
                  |L1.1112|
                          DCD      ||.data||
                  |L1.1116|
00045c  5b6f6b5d          DCB      "[ok]\r",0
000460  0d00    
000462  00                DCB      0
000463  00                DCB      0
                  |L1.1124|
                          DCD      strTouchEnaDis
                  |L1.1128|
000468  5b6e6f74          DCB      "[not found]\r",0
00046c  20666f75
000470  6e645d0d
000474  00      
000475  00                DCB      0
000476  00                DCB      0
000477  00                DCB      0
                  |L1.1144|
000478  3000              DCB      "0",0
00047a  00                DCB      0
00047b  00                DCB      0
                  |L1.1148|
00047c  3100              DCB      "1",0
00047e  00                DCB      0
00047f  00                DCB      0
                  |L1.1152|
000480  31363737          DCB      "16777215",0
000484  37323135
000488  00      
000489  00                DCB      0
00048a  00                DCB      0
00048b  00                DCB      0
                  |L1.1164|
                          DCD      touchEnaDis
                  |L1.1168|
000490  7463702e          DCB      "tcp.cfg",0
000494  63666700
000498  00                DCB      0
000499  00                DCB      0
00049a  00                DCB      0
00049b  00                DCB      0
                  |L1.1180|
                          DCD      own_hw_adr
                  |L1.1184|
0004a0  3139322e          DCB      "192.168.0.2",0
0004a4  3136382e
0004a8  302e3200
0004ac  00                DCB      0
0004ad  00                DCB      0
0004ae  00                DCB      0
0004af  00                DCB      0
                  |L1.1200|
0004b0  3139322e          DCB      "192.168.0.1",0
0004b4  3136382e
0004b8  302e3100
0004bc  00                DCB      0
0004bd  00                DCB      0
0004be  00                DCB      0
0004bf  00                DCB      0
                  |L1.1216|
0004c0  35303034          DCB      "5004",0
0004c4  00      
0004c5  00                DCB      0
0004c6  00                DCB      0
0004c7  00                DCB      0
                  |L1.1224|
0004c8  3500              DCB      "5",0
0004ca  00                DCB      0
0004cb  00                DCB      0
                  |L1.1228|
0004cc  4d4f5445          DCB      "MOTEL",0
0004d0  4c00    
0004d2  00                DCB      0
0004d3  00                DCB      0
                  |L1.1236|
0004d4  35303032          DCB      "5002",0
0004d8  00      
0004d9  00                DCB      0
0004da  00                DCB      0
0004db  00                DCB      0
                  |L1.1244|
0004dc  35303030          DCB      "5000",0
0004e0  00      
0004e1  00                DCB      0
0004e2  00                DCB      0
0004e3  00                DCB      0
                  |L1.1252|
0004e4  25303258          DCB      "%02X.%02X.%02X.%02X.%02X.%02X",0
0004e8  2e253032
0004ec  582e2530
0004f0  32582e25
0004f4  3032582e
0004f8  25303258
0004fc  2e253032
000500  5800    
000502  00                DCB      0
000503  00                DCB      0
                  |L1.1284|
000504  3235352e          DCB      "255.255.255.0",0
000508  3235352e
00050c  3235352e
000510  3000    
000512  00                DCB      0
000513  00                DCB      0
                  |L1.1300|
000514  5b537461          DCB      "[Static IP empty. Loading default]\r",0
000518  74696320
00051c  49502065
000520  6d707479
000524  2e204c6f
000528  6164696e
00052c  67206465
000530  6661756c
000534  745d0d00
                  |L1.1336|
000538  5b495020          DCB      "[IP server remote empty. Loading default]\r",0
00053c  73657276
000540  65722072
000544  656d6f74
000548  6520656d
00054c  7074792e
000550  204c6f61
000554  64696e67
000558  20646566
00055c  61756c74
000560  5d0d00  
000563  00                DCB      0
                  |L1.1380|
000564  5b506f72          DCB      "[Port server remote empty. Loading default]\r",0
000568  74207365
00056c  72766572
000570  2072656d
000574  6f746520
000578  656d7074
00057c  792e204c
000580  6f616469
000584  6e672064
000588  65666175
00058c  6c745d0d
000590  00      
000591  00                DCB      0
000592  00                DCB      0
000593  00                DCB      0
                  |L1.1428|
000594  5b496e74          DCB      "[Interval packet empty. Loading default]\r",0
000598  65727661
00059c  6c207061
0005a0  636b6574
0005a4  20656d70
0005a8  74792e20
0005ac  4c6f6164
0005b0  696e6720
0005b4  64656661
0005b8  756c745d
0005bc  0d00    
0005be  00                DCB      0
0005bf  00                DCB      0
                  |L1.1472|
0005c0  5b486f73          DCB      "[Host Name empty. Loading default]\r",0
0005c4  74204e61
0005c8  6d652065
0005cc  6d707479
0005d0  2e204c6f
0005d4  6164696e
0005d8  67206465
0005dc  6661756c
0005e0  745d0d00
                  |L1.1508|
0005e4  5b506f72          DCB      "[Port server local empty. Loading default]\r",0
0005e8  74207365
0005ec  72766572
0005f0  206c6f63
0005f4  616c2065
0005f8  6d707479
0005fc  2e204c6f
000600  6164696e
000604  67206465
000608  6661756c
00060c  745d0d00
                  |L1.1552|
000610  f2af1140          ADR      r1,|L1.1236|
000614  9800              LDR      r0,[sp,#0]
000616  f7fffffe          BL       strcpy
                  |L1.1562|
;;;234    
;;;235    		if(!cfg.tcp.port_udp[0]){ printf("[Port udp empty. Loading default]\r");
00061a  f8940062          LDRB     r0,[r4,#0x62]  ; cfg
00061e  b938              CBNZ     r0,|L1.1584|
000620  a0bf              ADR      r0,|L1.2336|
000622  f7fffffe          BL       __2printf
;;;236    			strcpy(cfg.tcp.port_udp,DEFAULT_PORT_UDP); }
000626  f2af114c          ADR      r1,|L1.1244|
00062a  9801              LDR      r0,[sp,#4]
00062c  f7fffffe          BL       strcpy
                  |L1.1584|
;;;237    
;;;238    		if(!cfg.tcp.mac[0]){ printf("[Mac empty. Loading default]\r");
000630  f8940078          LDRB     r0,[r4,#0x78]  ; cfg
000634  b930              CBNZ     r0,|L1.1604|
000636  a0c3              ADR      r0,|L1.2372|
000638  f7fffffe          BL       __2printf
;;;239    			strcpy(cfg.tcp.mac,(const char*)own_hw_adr); }
00063c  49c9              LDR      r1,|L1.2404|
00063e  9804              LDR      r0,[sp,#0x10]
000640  f7fffffe          BL       strcpy
                  |L1.1604|
;;;240    
;;;241    		if(!cfg.tcp.ip_app[0]){ printf("[IP app empty. Loading default]\r");
000644  f8940068          LDRB     r0,[r4,#0x68]  ; cfg
000648  b938              CBNZ     r0,|L1.1626|
00064a  a0c7              ADR      r0,|L1.2408|
00064c  f7fffffe          BL       __2printf
;;;242    			strcpy(cfg.tcp.ip_app,DEFAULT_IP_APP); }
000650  f2af11a4          ADR      r1,|L1.1200|
000654  9805              LDR      r0,[sp,#0x14]
000656  f7fffffe          BL       strcpy
                  |L1.1626|
;;;243    
;;;244    		if(!cfg.tcp.mask[0]){ printf("[Mask empty. Loading default]\r");
00065a  7c20              LDRB     r0,[r4,#0x10]  ; cfg
00065c  b938              CBNZ     r0,|L1.1646|
00065e  a0cb              ADR      r0,|L1.2444|
000660  f7fffffe          BL       __2printf
;;;245    			strcpy(cfg.tcp.mask,DEFAULT_MASK); }
000664  f2af1164          ADR      r1,|L1.1284|
000668  9806              LDR      r0,[sp,#0x18]
00066a  f7fffffe          BL       strcpy
                  |L1.1646|
;;;246    
;;;247    		if(!cfg.tcp.gateway[0]){ printf("[Gateway empty. Loading default]\r");
00066e  f8940020          LDRB     r0,[r4,#0x20]  ; cfg
000672  b938              CBNZ     r0,|L1.1668|
000674  a0cd              ADR      r0,|L1.2476|
000676  f7fffffe          BL       __2printf
;;;248    			strcpy(cfg.tcp.gateway,DEFAULT_GATEWAY); }
00067a  f2af11cc          ADR      r1,|L1.1200|
00067e  9807              LDR      r0,[sp,#0x1c]
000680  f7fffffe          BL       strcpy
                  |L1.1668|
;;;249    
;;;250    		fflush(stdout);
000684  b009              ADD      sp,sp,#0x24
000686  48d2              LDR      r0,|L1.2512|
000688  e8bd4ff0          POP      {r4-r11,lr}
00068c  f7ffbffe          B.W      fflush
;;;251    	}
;;;252    }
;;;253    /*****************************************************************************
                          ENDP

                  init_file PROC
;;;255    *****************************************************************************/
;;;256    void init_file(void)
000690  b57f              PUSH     {r0-r6,lr}
;;;257    {	
;;;258    	read_cfg_tcp();
000692  f7fffffe          BL       read_cfg_tcp
;;;259    
;;;260    	read_file_cfg();
000696  f7fffffe          BL       read_file_cfg
;;;261    
;;;262    #if USE_TCP_CLIENT	/*Comunicação TCP CLIENT será usada?*/
;;;263    	printf("[Server Port Local: %s]\r",cfg.tcp.port_serv_loc);
00069a  49ce              LDR      r1,|L1.2516|
00069c  a0ce              ADR      r0,|L1.2520|
00069e  f7fffffe          BL       __2printf
;;;264    #endif
;;;265    
;;;266    #if USE_TCP_SERVER	/*Comunicação TCP SERVER será usada?*/
;;;267    	printf("[Server IP: %s]\r",cfg.tcp.ip_serv_rem);
0006a2  49cc              LDR      r1,|L1.2516|
0006a4  a0d3              ADR      r0,|L1.2548|
0006a6  3916              SUBS     r1,r1,#0x16
0006a8  f7fffffe          BL       __2printf
;;;268    	printf("[Server Port Remoto: %s]\r",cfg.tcp.port_serv_rem);
0006ac  49c9              LDR      r1,|L1.2516|
0006ae  a0d6              ADR      r0,|L1.2568|
0006b0  1f89              SUBS     r1,r1,#6
0006b2  f7fffffe          BL       __2printf
;;;269    	#if USE_PCK_SERV
;;;270    	printf("[Interval Packet: %ss]\r",cfg.tcp.interval_packet_serv);
0006b6  49c7              LDR      r1,|L1.2516|
0006b8  a0da              ADR      r0,|L1.2596|
0006ba  1d89              ADDS     r1,r1,#6
0006bc  f7fffffe          BL       __2printf
;;;271    	#endif
;;;272    #endif
;;;273    
;;;274    #if USE_UDP			/*Comunicação TCP SERVER será usada?*/
;;;275    	printf("[Port UDP: %s]\r",cfg.tcp.port_udp);
0006c0  49c4              LDR      r1,|L1.2516|
0006c2  a0de              ADR      r0,|L1.2620|
0006c4  310c              ADDS     r1,r1,#0xc
0006c6  f7fffffe          BL       __2printf
;;;276    #endif
;;;277    	
;;;278    	printf("[Static IP: %s]\r",cfg.tcp.static_ip);
0006ca  49c2              LDR      r1,|L1.2516|
0006cc  a0df              ADR      r0,|L1.2636|
0006ce  3956              SUBS     r1,r1,#0x56
0006d0  f7fffffe          BL       __2printf
;;;279    	printf("[Static Mask: %s]\r",cfg.tcp.mask);
0006d4  49bf              LDR      r1,|L1.2516|
0006d6  a0e2              ADR      r0,|L1.2656|
0006d8  3946              SUBS     r1,r1,#0x46
0006da  f7fffffe          BL       __2printf
;;;280    	printf("[Static Gateway: %s]\r",cfg.tcp.gateway); 
0006de  49bd              LDR      r1,|L1.2516|
0006e0  a0e4              ADR      r0,|L1.2676|
0006e2  3936              SUBS     r1,r1,#0x36
0006e4  f7fffffe          BL       __2printf
;;;281    	printf("[Host name: %s]\r",cfg.tcp.host_name);
0006e8  49ba              LDR      r1,|L1.2516|
0006ea  a0e8              ADR      r0,|L1.2700|
0006ec  3926              SUBS     r1,r1,#0x26
0006ee  f7fffffe          BL       __2printf
;;;282    	printf("[MAC: %s..%02X.%02X.%02X.%02X.%02X.%02X]\r",cfg.tcp.mac,own_hw_adr[0],own_hw_adr[1],own_hw_adr[2],own_hw_adr[3],own_hw_adr[4],own_hw_adr[5]);	
0006f2  489c              LDR      r0,|L1.2404|
0006f4  7881              LDRB     r1,[r0,#2]  ; own_hw_adr
0006f6  7944              LDRB     r4,[r0,#5]  ; own_hw_adr
0006f8  7903              LDRB     r3,[r0,#4]  ; own_hw_adr
0006fa  78c2              LDRB     r2,[r0,#3]  ; own_hw_adr
0006fc  e88d001e          STM      sp,{r1-r4}
000700  49b4              LDR      r1,|L1.2516|
000702  7843              LDRB     r3,[r0,#1]  ; own_hw_adr
000704  7802              LDRB     r2,[r0,#0]  ; own_hw_adr
000706  3122              ADDS     r1,r1,#0x22
000708  a0e5              ADR      r0,|L1.2720|
00070a  f7fffffe          BL       __2printf
;;;283    	printf("[IP Aplicação: %s]\r",cfg.tcp.ip_app);	
00070e  49b1              LDR      r1,|L1.2516|
000710  a0ee              ADR      r0,|L1.2764|
000712  3112              ADDS     r1,r1,#0x12
000714  f7fffffe          BL       __2printf
;;;284    	printf("[Enable/Disable Touch: 0x%X]\r",touchEnaDis);
000718  48f1              LDR      r0,|L1.2784|
00071a  6801              LDR      r1,[r0,#0]  ; touchEnaDis
00071c  a0f1              ADR      r0,|L1.2788|
00071e  f7fffffe          BL       __2printf
;;;285    	printf("[Mode Ar: Swing %s]\r\r",(atoi(cfg.file.mode_func_ar)) ? "In" : "Out");
000722  48ac              LDR      r0,|L1.2516|
000724  3032              ADDS     r0,r0,#0x32
000726  f7fffffe          BL       atoi
00072a  b108              CBZ      r0,|L1.1840|
00072c  a1f5              ADR      r1,|L1.2820|
00072e  e000              B        |L1.1842|
                  |L1.1840|
000730  a1f5              ADR      r1,|L1.2824|
                  |L1.1842|
000732  a0f6              ADR      r0,|L1.2828|
000734  f7fffffe          BL       __2printf
;;;286    	
;;;287    	printf("[Func IR Scene: %s]\r",(atoi(cfg.file.func_ir_scene)) ? "Enable" : "Disable");
000738  48a6              LDR      r0,|L1.2516|
00073a  3035              ADDS     r0,r0,#0x35
00073c  f7fffffe          BL       atoi
000740  b108              CBZ      r0,|L1.1862|
000742  a1f8              ADR      r1,|L1.2852|
000744  e000              B        |L1.1864|
                  |L1.1862|
000746  a1f9              ADR      r1,|L1.2860|
                  |L1.1864|
000748  a0fa              ADR      r0,|L1.2868|
00074a  f7fffffe          BL       __2printf
;;;288    
;;;289    	printf("[Type Out Dimmer: 0:%s..1:%s..2:%s]\r\r",atoi(type_dim0) ? "DIMMER":"ONOFF", 
00074e  48ff              LDR      r0,|L1.2892|
000750  f7fffffe          BL       atoi
000754  b108              CBZ      r0,|L1.1882|
;;;290    		atoi(type_dim1) ? "DIMMER":"ONOFF", 
;;;291    		atoi(type_dim2) ? "DIMMER":"ONOFF");
000756  a4fe              ADR      r4,|L1.2896|
000758  e000              B        |L1.1884|
                  |L1.1882|
00075a  a4ff              ADR      r4,|L1.2904|
                  |L1.1884|
00075c  48fb              LDR      r0,|L1.2892|
00075e  1ec0              SUBS     r0,r0,#3
000760  f7fffffe          BL       atoi
000764  b108              CBZ      r0,|L1.1898|
000766  a5fa              ADR      r5,|L1.2896|
000768  e000              B        |L1.1900|
                  |L1.1898|
00076a  a5fb              ADR      r5,|L1.2904|
                  |L1.1900|
00076c  48f7              LDR      r0,|L1.2892|
00076e  1f80              SUBS     r0,r0,#6              ;290
000770  f7fffffe          BL       atoi
000774  b108              CBZ      r0,|L1.1914|
000776  a1f6              ADR      r1,|L1.2896|
000778  e000              B        |L1.1916|
                  |L1.1914|
00077a  a1f7              ADR      r1,|L1.2904|
                  |L1.1916|
00077c  4623              MOV      r3,r4                 ;289
00077e  462a              MOV      r2,r5                 ;289
000780  a0f7              ADR      r0,|L1.2912|
000782  f7fffffe          BL       __2printf
;;;292    	
;;;293    	fflush(stdout);
000786  b004              ADD      sp,sp,#0x10
000788  4891              LDR      r0,|L1.2512|
00078a  e8bd4070          POP      {r4-r6,lr}
00078e  f7ffbffe          B.W      fflush
;;;294    }
;;;295    
                          ENDP

                  file_task PROC
;;;298    *****************************************************************************/
;;;299    void file_task (void) 
000792  e92d4ff0          PUSH     {r4-r11,lr}
;;;300    {
;;;301    	static U8 flag_sd_inserido = __TRUE,flag_read_sd = __FALSE, cnt_init_sd=0;
;;;302    	static U16 cnt_type_dim=0; 
;;;303    	char str[15][20],i,j;	
;;;304    
;;;305    	if(!tick)
000796  48fc              LDR      r0,|L1.2952|
000798  b0d9              SUB      sp,sp,#0x164          ;300
00079a  7800              LDRB     r0,[r0,#0]  ; tick
00079c  2800              CMP      r0,#0
00079e  d07e              BEQ      |L1.2206|
;;;306    		return;
;;;307    
;;;308    	if(!(++cnt_type_dim % 300))
0007a0  4dea              LDR      r5,|L1.2892|
0007a2  f44f7196          MOV      r1,#0x12c
0007a6  3d0c              SUBS     r5,r5,#0xc
0007a8  88a8              LDRH     r0,[r5,#4]  ; cnt_type_dim
0007aa  1c40              ADDS     r0,r0,#1
0007ac  b280              UXTH     r0,r0
0007ae  fbb0f2f1          UDIV     r2,r0,r1
0007b2  80a8              STRH     r0,[r5,#4]
0007b4  fb010012          MLS      r0,r1,r2,r0
0007b8  b9b0              CBNZ     r0,|L1.2024|
;;;309    	{
;;;310    		sprintf(buf_tx,"TDI %u %u %u!\0", atoi(type_dim0), atoi(type_dim1), atoi(type_dim2)); 
0007ba  48e4              LDR      r0,|L1.2892|
0007bc  f7fffffe          BL       atoi
0007c0  4606              MOV      r6,r0
0007c2  f1050009          ADD      r0,r5,#9
0007c6  f7fffffe          BL       atoi
0007ca  4604              MOV      r4,r0
0007cc  1da8              ADDS     r0,r5,#6
0007ce  f7fffffe          BL       atoi
0007d2  4602              MOV      r2,r0
0007d4  4623              MOV      r3,r4
0007d6  a1ed              ADR      r1,|L1.2956|
0007d8  48f0              LDR      r0,|L1.2972|
0007da  9600              STR      r6,[sp,#0]
0007dc  f7fffffe          BL       __2sprintf
;;;311    		uart_putString(UART_LINK_LPC,buf_tx);
0007e0  49ee              LDR      r1,|L1.2972|
0007e2  2002              MOVS     r0,#2
0007e4  f7fffffe          BL       uart_putString
                  |L1.2024|
;;;312    	}
;;;313    
;;;314    	if(flag_read_sd)
0007e8  7868              LDRB     r0,[r5,#1]  ; flag_read_sd
0007ea  2400              MOVS     r4,#0                 ;305
0007ec  2800              CMP      r0,#0
0007ee  d07e              BEQ      |L1.2286|
;;;315    	{
;;;316    		flag_read_sd = __FALSE;
0007f0  706c              STRB     r4,[r5,#1]
;;;317    		init_scene(0xFF);					/*Realiza a leitura das cenas novamente já que o SD foi inserido*/
0007f2  20ff              MOVS     r0,#0xff
0007f4  f7fffffe          BL       init_scene
;;;318    	
;;;319    		for(i=0;i<15;i++)
0007f8  2600              MOVS     r6,#0
0007fa  ad01              ADD      r5,sp,#4              ;303
                  |L1.2044|
;;;320    			memset(str[i],0,sizeof(str[i]));
0007fc  eb060086          ADD      r0,r6,r6,LSL #2
000800  eb050080          ADD      r0,r5,r0,LSL #2
000804  2114              MOVS     r1,#0x14
000806  f7fffffe          BL       __aeabi_memclr4
00080a  1c76              ADDS     r6,r6,#1              ;319
00080c  b2f6              UXTB     r6,r6                 ;319
00080e  2e0f              CMP      r6,#0xf               ;319
000810  d3f4              BCC      |L1.2044|
;;;321    		/*Copia para ram a configuração (TCP) atual*/
;;;322    	
;;;323    		strcpy(str[0],cfg.tcp.static_ip);
000812  4970              LDR      r1,|L1.2516|
000814  a801              ADD      r0,sp,#4
000816  3956              SUBS     r1,r1,#0x56
000818  f7fffffe          BL       strcpy
;;;324    		strcpy(str[1],cfg.tcp.ip_serv_rem);
00081c  496d              LDR      r1,|L1.2516|
00081e  a806              ADD      r0,sp,#0x18
000820  3916              SUBS     r1,r1,#0x16
000822  4680              MOV      r8,r0
000824  9155              STR      r1,[sp,#0x154]
000826  f7fffffe          BL       strcpy
;;;325    		strcpy(str[2],cfg.tcp.port_serv_rem);
00082a  496a              LDR      r1,|L1.2516|
00082c  a80b              ADD      r0,sp,#0x2c
00082e  1f89              SUBS     r1,r1,#6
000830  e9cd104c          STRD     r1,r0,[sp,#0x130]
000834  f7fffffe          BL       strcpy
;;;326    		strcpy(str[3],cfg.tcp.interval_packet_serv);
000838  4966              LDR      r1,|L1.2516|
00083a  a810              ADD      r0,sp,#0x40
00083c  1d89              ADDS     r1,r1,#6
00083e  e9cd104e          STRD     r1,r0,[sp,#0x138]
000842  f7fffffe          BL       strcpy
;;;327    		strcpy(str[4],cfg.tcp.host_name);
000846  4963              LDR      r1,|L1.2516|
000848  a815              ADD      r0,sp,#0x54
00084a  3926              SUBS     r1,r1,#0x26
00084c  e9cd1050          STRD     r1,r0,[sp,#0x140]
000850  f7fffffe          BL       strcpy
;;;328    		strcpy(str[5],cfg.tcp.port_serv_loc);
000854  495f              LDR      r1,|L1.2516|
000856  a81a              ADD      r0,sp,#0x68
000858  e9cd1052          STRD     r1,r0,[sp,#0x148]
00085c  f7fffffe          BL       strcpy
;;;329    		strcpy(str[6],cfg.tcp.port_udp);
000860  495c              LDR      r1,|L1.2516|
000862  a81f              ADD      r0,sp,#0x7c
000864  310c              ADDS     r1,r1,#0xc
000866  9100              STR      r1,[sp,#0]
000868  9054              STR      r0,[sp,#0x150]
00086a  f7fffffe          BL       strcpy
;;;330    		strcpy(str[7],cfg.tcp.mac);
00086e  4959              LDR      r1,|L1.2516|
000870  a824              ADD      r0,sp,#0x90
000872  3122              ADDS     r1,r1,#0x22
000874  460f              MOV      r7,r1
000876  9056              STR      r0,[sp,#0x158]
000878  f7fffffe          BL       strcpy
;;;331    		strcpy(str[8],cfg.tcp.ip_app);
00087c  4955              LDR      r1,|L1.2516|
00087e  a829              ADD      r0,sp,#0xa4
000880  3112              ADDS     r1,r1,#0x12
000882  460e              MOV      r6,r1
000884  9057              STR      r0,[sp,#0x15c]
000886  f7fffffe          BL       strcpy
;;;332    		strcpy(str[9],cfg.tcp.mask);
00088a  4952              LDR      r1,|L1.2516|
00088c  a82e              ADD      r0,sp,#0xb8
00088e  3946              SUBS     r1,r1,#0x46
000890  4682              MOV      r10,r0
000892  9158              STR      r1,[sp,#0x160]
000894  f7fffffe          BL       strcpy
;;;333    		strcpy(str[10],cfg.tcp.gateway);
000898  494e              LDR      r1,|L1.2516|
00089a  3936              SUBS     r1,r1,#0x36
00089c  e000              B        |L1.2208|
                  |L1.2206|
00089e  e1a9              B        |L1.3060|
                  |L1.2208|
0008a0  a833              ADD      r0,sp,#0xcc
0008a2  468b              MOV      r11,r1
0008a4  4681              MOV      r9,r0
0008a6  f7fffffe          BL       strcpy
;;;334    
;;;335    		for(i=0;i<15;i++)
0008aa  2100              MOVS     r1,#0
                  |L1.2220|
0008ac  eb010281          ADD      r2,r1,r1,LSL #2       ;320
;;;336    			for(j=0;j<20;j++)
0008b0  2000              MOVS     r0,#0
0008b2  eb050382          ADD      r3,r5,r2,LSL #2       ;320
                  |L1.2230|
;;;337    				if(str[i][j] == '\r' || str[i][j] == '\n')
0008b6  5c1a              LDRB     r2,[r3,r0]
0008b8  2a0d              CMP      r2,#0xd
0008ba  d001              BEQ      |L1.2240|
0008bc  2a0a              CMP      r2,#0xa
0008be  d100              BNE      |L1.2242|
                  |L1.2240|
;;;338    					str[i][j] = 0;	
0008c0  541c              STRB     r4,[r3,r0]
                  |L1.2242|
0008c2  1c40              ADDS     r0,r0,#1              ;336
0008c4  b2c0              UXTB     r0,r0                 ;336
0008c6  2814              CMP      r0,#0x14              ;336
0008c8  d3f5              BCC      |L1.2230|
0008ca  1c49              ADDS     r1,r1,#1              ;335
0008cc  b2c9              UXTB     r1,r1                 ;335
0008ce  290f              CMP      r1,#0xf               ;335
0008d0  d3ec              BCC      |L1.2220|
;;;339    
;;;340    //		printf("\r\rAntes...\r");
;;;341    //		printf("str[0]:%s...%s...\r",str[0],cfg.tcp.static_ip);
;;;342    //		printf("str[1]:%s...%s...\r",str[1],cfg.tcp.ip_serv_rem);
;;;343    //		printf("str[2]:%s...%s...\r",str[2],cfg.tcp.port_serv_rem);
;;;344    //		printf("str[3]:%s...%s...\r",str[3],cfg.tcp.interval_packet_serv);
;;;345    //		printf("str[4]:%s...%s...\r",str[4],cfg.tcp.host_name);
;;;346    //		printf("str[5]:%s...%s...\r",str[5],cfg.tcp.port_serv_loc);
;;;347    //		printf("str[6]:%s...%s...\r",str[6],cfg.tcp.port_udp);
;;;348    //		printf("str[7]:%s...%s...\r",str[7],cfg.tcp.mac);
;;;349    //		printf("str[8]:%s...%s...\r",str[8],cfg.tcp.ip_app);
;;;350    //		printf("str[9]:%s...%s...\r",str[9],cfg.tcp.mask);
;;;351    //		printf("str[10]:%s...%s...\r",str[10],cfg.tcp.gateway);
;;;352    //		fflush(stdout); 
;;;353    
;;;354    
;;;355    		read_cfg_tcp();	/*O cartão foi inserido novamente, então lê a configuração tcp*/
0008d2  f7fffffe          BL       read_cfg_tcp
;;;356    
;;;357    //		printf("\r\rDepois...\r");
;;;358    //		printf("str[0]:%s...%s...\r",str[0],cfg.tcp.static_ip);
;;;359    //		printf("str[1]:%s...%s...\r",str[1],cfg.tcp.ip_serv_rem);
;;;360    //		printf("str[2]:%s...%s...\r",str[2],cfg.tcp.port_serv_rem);
;;;361    //		printf("str[3]:%s...%s...\r",str[3],cfg.tcp.interval_packet_serv);
;;;362    //		printf("str[4]:%s...%s...\r",str[4],cfg.tcp.host_name);
;;;363    //		printf("str[5]:%s...%s...\r",str[5],cfg.tcp.port_serv_loc);
;;;364    //		printf("str[6]:%s...%s...\r",str[6],cfg.tcp.port_udp);
;;;365    //		printf("str[7]:%s...%s...\r",str[7],cfg.tcp.mac);
;;;366    //		printf("str[8]:%s...%s...\r",str[8],cfg.tcp.ip_app);
;;;367    //		printf("str[9]:%s...%s...\r",str[9],cfg.tcp.mask);
;;;368    //		printf("str[10]:%s...%s...\r",str[10],cfg.tcp.gateway);
;;;369    //		fflush(stdout);
;;;370    
;;;371    		/*Houve diferença da configuração antiga pra atual?*/
;;;372    		if(strcmp(str[0],cfg.tcp.static_ip)            || strcmp(str[1],cfg.tcp.ip_serv_rem) || strcmp(str[2],cfg.tcp.port_serv_rem) || 
0008d6  493f              LDR      r1,|L1.2516|
0008d8  a801              ADD      r0,sp,#4
0008da  3956              SUBS     r1,r1,#0x56
0008dc  f7fffffe          BL       strcmp
0008e0  b9e8              CBNZ     r0,|L1.2334|
0008e2  4640              MOV      r0,r8
0008e4  9955              LDR      r1,[sp,#0x154]
0008e6  f7fffffe          BL       strcmp
0008ea  b9c0              CBNZ     r0,|L1.2334|
0008ec  e000              B        |L1.2288|
                  |L1.2286|
0008ee  e184              B        |L1.3066|
                  |L1.2288|
0008f0  e9dd104c          LDRD     r1,r0,[sp,#0x130]
0008f4  f7fffffe          BL       strcmp
0008f8  b988              CBNZ     r0,|L1.2334|
0008fa  e9dd104e          LDRD     r1,r0,[sp,#0x138]
;;;373    		   strcmp(str[3],cfg.tcp.interval_packet_serv) || strcmp(str[4],cfg.tcp.host_name)   || strcmp(str[5],cfg.tcp.port_serv_loc) || 
0008fe  f7fffffe          BL       strcmp
000902  b960              CBNZ     r0,|L1.2334|
000904  e9dd1050          LDRD     r1,r0,[sp,#0x140]
000908  f7fffffe          BL       strcmp
00090c  b938              CBNZ     r0,|L1.2334|
00090e  e9dd1052          LDRD     r1,r0,[sp,#0x148]
000912  f7fffffe          BL       strcmp
000916  b910              CBNZ     r0,|L1.2334|
;;;374    		   strcmp(str[6],cfg.tcp.port_udp)             || strcmp(str[7],cfg.tcp.mac)         || strcmp(str[8],cfg.tcp.ip_app)        ||
000918  9900              LDR      r1,[sp,#0]
00091a  9854              LDR      r0,[sp,#0x150]
00091c  e140              B        |L1.2976|
                  |L1.2334|
00091e  e156              B        |L1.3022|
                  |L1.2336|
000920  5b506f72          DCB      "[Port udp empty. Loading default]\r",0
000924  74207564
000928  7020656d
00092c  7074792e
000930  204c6f61
000934  64696e67
000938  20646566
00093c  61756c74
000940  5d0d00  
000943  00                DCB      0
                  |L1.2372|
000944  5b4d6163          DCB      "[Mac empty. Loading default]\r",0
000948  20656d70
00094c  74792e20
000950  4c6f6164
000954  696e6720
000958  64656661
00095c  756c745d
000960  0d00    
000962  00                DCB      0
000963  00                DCB      0
                  |L1.2404|
                          DCD      own_hw_adr
                  |L1.2408|
000968  5b495020          DCB      "[IP app empty. Loading default]\r",0
00096c  61707020
000970  656d7074
000974  792e204c
000978  6f616469
00097c  6e672064
000980  65666175
000984  6c745d0d
000988  00      
000989  00                DCB      0
00098a  00                DCB      0
00098b  00                DCB      0
                  |L1.2444|
00098c  5b4d6173          DCB      "[Mask empty. Loading default]\r",0
000990  6b20656d
000994  7074792e
000998  204c6f61
00099c  64696e67
0009a0  20646566
0009a4  61756c74
0009a8  5d0d00  
0009ab  00                DCB      0
                  |L1.2476|
0009ac  5b476174          DCB      "[Gateway empty. Loading default]\r",0
0009b0  65776179
0009b4  20656d70
0009b8  74792e20
0009bc  4c6f6164
0009c0  696e6720
0009c4  64656661
0009c8  756c745d
0009cc  0d00    
0009ce  00                DCB      0
0009cf  00                DCB      0
                  |L1.2512|
                          DCD      __stdout
                  |L1.2516|
                          DCD      ||.bss||+0x56
                  |L1.2520|
0009d8  5b536572          DCB      "[Server Port Local: %s]\r",0
0009dc  76657220
0009e0  506f7274
0009e4  204c6f63
0009e8  616c3a20
0009ec  25735d0d
0009f0  00      
0009f1  00                DCB      0
0009f2  00                DCB      0
0009f3  00                DCB      0
                  |L1.2548|
0009f4  5b536572          DCB      "[Server IP: %s]\r",0
0009f8  76657220
0009fc  49503a20
000a00  25735d0d
000a04  00      
000a05  00                DCB      0
000a06  00                DCB      0
000a07  00                DCB      0
                  |L1.2568|
000a08  5b536572          DCB      "[Server Port Remoto: %s]\r",0
000a0c  76657220
000a10  506f7274
000a14  2052656d
000a18  6f746f3a
000a1c  2025735d
000a20  0d00    
000a22  00                DCB      0
000a23  00                DCB      0
                  |L1.2596|
000a24  5b496e74          DCB      "[Interval Packet: %ss]\r",0
000a28  65727661
000a2c  6c205061
000a30  636b6574
000a34  3a202573
000a38  735d0d00
                  |L1.2620|
000a3c  5b506f72          DCB      "[Port UDP: %s]\r",0
000a40  74205544
000a44  503a2025
000a48  735d0d00
                  |L1.2636|
000a4c  5b537461          DCB      "[Static IP: %s]\r",0
000a50  74696320
000a54  49503a20
000a58  25735d0d
000a5c  00      
000a5d  00                DCB      0
000a5e  00                DCB      0
000a5f  00                DCB      0
                  |L1.2656|
000a60  5b537461          DCB      "[Static Mask: %s]\r",0
000a64  74696320
000a68  4d61736b
000a6c  3a202573
000a70  5d0d00  
000a73  00                DCB      0
                  |L1.2676|
000a74  5b537461          DCB      "[Static Gateway: %s]\r",0
000a78  74696320
000a7c  47617465
000a80  7761793a
000a84  2025735d
000a88  0d00    
000a8a  00                DCB      0
000a8b  00                DCB      0
                  |L1.2700|
000a8c  5b486f73          DCB      "[Host name: %s]\r",0
000a90  74206e61
000a94  6d653a20
000a98  25735d0d
000a9c  00      
000a9d  00                DCB      0
000a9e  00                DCB      0
000a9f  00                DCB      0
                  |L1.2720|
000aa0  5b4d4143          DCB      "[MAC: %s..%02X.%02X.%02X.%02X.%02X.%02X]\r",0
000aa4  3a202573
000aa8  2e2e2530
000aac  32582e25
000ab0  3032582e
000ab4  25303258
000ab8  2e253032
000abc  582e2530
000ac0  32582e25
000ac4  3032585d
000ac8  0d00    
000aca  00                DCB      0
000acb  00                DCB      0
                  |L1.2764|
000acc  5b495020          DCB      "[IP Aplica",231,227,"o: %s]\r",0
000ad0  41706c69
000ad4  6361e7e3
000ad8  6f3a2025
000adc  735d0d00
                  |L1.2784|
                          DCD      touchEnaDis
                  |L1.2788|
000ae4  5b456e61          DCB      "[Enable/Disable Touch: 0x%X]\r",0
000ae8  626c652f
000aec  44697361
000af0  626c6520
000af4  546f7563
000af8  683a2030
000afc  7825585d
000b00  0d00    
000b02  00                DCB      0
000b03  00                DCB      0
                  |L1.2820|
000b04  496e00            DCB      "In",0
000b07  00                DCB      0
                  |L1.2824|
000b08  4f757400          DCB      "Out",0
                  |L1.2828|
000b0c  5b4d6f64          DCB      "[Mode Ar: Swing %s]\r\r",0
000b10  65204172
000b14  3a205377
000b18  696e6720
000b1c  25735d0d
000b20  0d00    
000b22  00                DCB      0
000b23  00                DCB      0
                  |L1.2852|
000b24  456e6162          DCB      "Enable",0
000b28  6c6500  
000b2b  00                DCB      0
                  |L1.2860|
000b2c  44697361          DCB      "Disable",0
000b30  626c6500
                  |L1.2868|
000b34  5b46756e          DCB      "[Func IR Scene: %s]\r",0
000b38  63204952
000b3c  20536365
000b40  6e653a20
000b44  25735d0d
000b48  00      
000b49  00                DCB      0
000b4a  00                DCB      0
000b4b  00                DCB      0
                  |L1.2892|
                          DCD      ||.data||+0xc
                  |L1.2896|
000b50  44494d4d          DCB      "DIMMER",0
000b54  455200  
000b57  00                DCB      0
                  |L1.2904|
000b58  4f4e4f46          DCB      "ONOFF",0
000b5c  4600    
000b5e  00                DCB      0
000b5f  00                DCB      0
                  |L1.2912|
000b60  5b547970          DCB      "[Type Out Dimmer: 0:%s..1:%s..2:%s]\r\r",0
000b64  65204f75
000b68  74204469
000b6c  6d6d6572
000b70  3a20303a
000b74  25732e2e
000b78  313a2573
000b7c  2e2e323a
000b80  25735d0d
000b84  0d00    
000b86  00                DCB      0
000b87  00                DCB      0
                  |L1.2952|
                          DCD      tick
                  |L1.2956|
000b8c  54444920          DCB      "TDI %u %u %u!",0
000b90  25752025
000b94  75202575
000b98  2100    
000b9a  00                DCB      0
000b9b  00                DCB      0
                  |L1.2972|
                          DCD      buf_tx
                  |L1.2976|
000ba0  f7fffffe          BL       strcmp
000ba4  b998              CBNZ     r0,|L1.3022|
000ba6  4639              MOV      r1,r7
000ba8  9856              LDR      r0,[sp,#0x158]
000baa  f7fffffe          BL       strcmp
000bae  b970              CBNZ     r0,|L1.3022|
000bb0  4631              MOV      r1,r6
000bb2  9857              LDR      r0,[sp,#0x15c]
000bb4  f7fffffe          BL       strcmp
000bb8  b948              CBNZ     r0,|L1.3022|
000bba  4650              MOV      r0,r10
;;;375    		   strcmp(str[9],cfg.tcp.mask)                 || strcmp(str[10],cfg.tcp.gateway))
000bbc  9958              LDR      r1,[sp,#0x160]
000bbe  f7fffffe          BL       strcmp
000bc2  b920              CBNZ     r0,|L1.3022|
000bc4  4659              MOV      r1,r11
000bc6  4648              MOV      r0,r9
000bc8  f7fffffe          BL       strcmp
000bcc  b180              CBZ      r0,|L1.3056|
                  |L1.3022|
;;;376    		{
;;;377    			printf ("[TCP Config via SD..Reiniciando]\r\r");
000bce  a080              ADR      r0,|L1.3536|
000bd0  f7fffffe          BL       __2printf
;;;378    			fflush(stdout);
000bd4  4887              LDR      r0,|L1.3572|
000bd6  f7fffffe          BL       fflush
;;;379    			LPC_WDT->WDTC = 0x003FFFF;	/*0.5s*/
000bda  f04f4080          MOV      r0,#0x40000000
000bde  4986              LDR      r1,|L1.3576|
000be0  6041              STR      r1,[r0,#4]
;;;380    			wdt_feed();
000be2  f04f01aa          MOV      r1,#0xaa
000be6  7201              STRB     r1,[r0,#8]
000be8  f04f0155          MOV      r1,#0x55
000bec  7201              STRB     r1,[r0,#8]
                  |L1.3054|
;;;381    			while(1);
000bee  e7fe              B        |L1.3054|
                  |L1.3056|
;;;382    		}
;;;383    
;;;384    		read_file_cfg();	
000bf0  f7fffffe          BL       read_file_cfg
                  |L1.3060|
;;;385    	}else
;;;386    	{
;;;387    		if(!(LPC_GPIO1->FIOPIN & (1 << 25)))	/*SD inserido?*/
;;;388    		{
;;;389    			if(!flag_sd_inserido)
;;;390    			{
;;;391    				if(++cnt_init_sd >= 20)			/*Tempo para estabilização*/
;;;392    				{
;;;393    					flag_sd_inserido = __TRUE;
;;;394    					cnt_init_sd = 0;			  
;;;395    					printf("[SD Card Inserido]\r");
;;;396    					beep(BEEP_CFG);
;;;397    					fflush(stdout); 
;;;398    					init_msd();					/*Start again the SD card Inicia novamente o sd*/
;;;399    					flag_read_sd = __TRUE;
;;;400    				}	
;;;401    			}
;;;402    		}else
;;;403    		{
;;;404    			if(flag_sd_inserido)
;;;405    			{ 
;;;406    				flag_sd_inserido = __FALSE;
;;;407    				printf("[SD Card Retirado]\r");
;;;408    				fflush(stdout);
;;;409    				beep(BEEP_ERROR); 
;;;410    			}
;;;411    		}
;;;412    	}
;;;413    }
000bf4  b059              ADD      sp,sp,#0x164
                  |L1.3062|
000bf6  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.3066|
000bfa  4880              LDR      r0,|L1.3580|
000bfc  6b40              LDR      r0,[r0,#0x34]         ;387
000bfe  0180              LSLS     r0,r0,#6              ;387
000c00  7828              LDRB     r0,[r5,#0]            ;404  ; flag_sd_inserido
000c02  d417              BMI      |L1.3124|
000c04  2800              CMP      r0,#0                 ;389
000c06  d1f5              BNE      |L1.3060|
000c08  78a8              LDRB     r0,[r5,#2]            ;391  ; cnt_init_sd
000c0a  1c40              ADDS     r0,r0,#1              ;391
000c0c  b2c0              UXTB     r0,r0                 ;391
000c0e  70a8              STRB     r0,[r5,#2]            ;391
000c10  2814              CMP      r0,#0x14              ;391
000c12  d3ef              BCC      |L1.3060|
000c14  2601              MOVS     r6,#1                 ;393
000c16  702e              STRB     r6,[r5,#0]            ;393
000c18  70ac              STRB     r4,[r5,#2]            ;394
000c1a  a079              ADR      r0,|L1.3584|
000c1c  f7fffffe          BL       __2printf
000c20  2001              MOVS     r0,#1                 ;396
000c22  f7fffffe          BL       beep
000c26  4873              LDR      r0,|L1.3572|
000c28  f7fffffe          BL       fflush
000c2c  f7fffffe          BL       init_msd
000c30  706e              STRB     r6,[r5,#1]            ;399
000c32  e7df              B        |L1.3060|
                  |L1.3124|
000c34  2800              CMP      r0,#0                 ;404
000c36  d0dd              BEQ      |L1.3060|
000c38  702c              STRB     r4,[r5,#0]            ;406
000c3a  a076              ADR      r0,|L1.3604|
000c3c  f7fffffe          BL       __2printf
000c40  486c              LDR      r0,|L1.3572|
000c42  f7fffffe          BL       fflush
000c46  2003              MOVS     r0,#3                 ;409
000c48  f7fffffe          BL       beep
000c4c  e7d2              B        |L1.3060|
;;;414    /*****************************************************************************
                          ENDP

                  fwrite_line PROC
;;;468    *****************************************************************************/
;;;469    char fwrite_line(char *buf_write, const char *file, char num_line)
000c4e  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;470    {
;;;471    	FILE *f;
;;;472    	char cur_line = 0,ptr[100],i;
000c52  2400              MOVS     r4,#0
000c54  4680              MOV      r8,r0                 ;470
;;;473     	int ch,j=0;
;;;474    	char lines[50][100],buf[50];
;;;475    
;;;476    	wdt_feed();
000c56  f04f4980          MOV      r9,#0x40000000
000c5a  f5ad5da2          SUB      sp,sp,#0x1440         ;470
000c5e  20aa              MOVS     r0,#0xaa
000c60  4625              MOV      r5,r4                 ;473
000c62  f8890008          STRB     r0,[r9,#8]
000c66  f04f0a55          MOV      r10,#0x55
000c6a  f889a008          STRB     r10,[r9,#8]
;;;477    
;;;478    	for(i=0;i<50;i++)
000c6e  4627              MOV      r7,r4
000c70  466e              MOV      r6,sp                 ;474
                  |L1.3186|
;;;479    		memset(lines[i],0,sizeof(lines[i]));
000c72  eb0700c7          ADD      r0,r7,r7,LSL #3
000c76  eb001007          ADD      r0,r0,r7,LSL #4
000c7a  eb060080          ADD      r0,r6,r0,LSL #2
000c7e  2164              MOVS     r1,#0x64
000c80  f7fffffe          BL       __aeabi_memclr4
000c84  1c7f              ADDS     r7,r7,#1              ;478
000c86  b2ff              UXTB     r7,r7                 ;478
000c88  2f32              CMP      r7,#0x32              ;478
000c8a  d3f2              BCC      |L1.3186|
;;;480    	memset(ptr,0,sizeof(ptr));
000c8c  f2413088          MOV      r0,#0x1388
000c90  2164              MOVS     r1,#0x64
000c92  4468              ADD      r0,r0,sp
000c94  f7fffffe          BL       __aeabi_memclr4
;;;481    	memset(buf,0,sizeof(buf));
000c98  f2413bec          MOV      r11,#0x13ec
000c9c  44eb              ADD      r11,r11,sp
000c9e  465f              MOV      r7,r11
000ca0  2134              MOVS     r1,#0x34
000ca2  4638              MOV      r0,r7
000ca4  f7fffffe          BL       __aeabi_memclr4
;;;482    
;;;483    	strcpy(buf,buf_write);
000ca8  4641              MOV      r1,r8
000caa  4638              MOV      r0,r7
000cac  f7fffffe          BL       strcpy
;;;484    
;;;485    	f = fopen(file,"r");
000cb0  f6af0184          ADR      r1,|L1.1072|
000cb4  f50d5280          ADD      r2,sp,#0x1000
000cb8  f8d20444          LDR      r0,[r2,#0x444]
000cbc  f7fffffe          BL       fopen
000cc0  ea5f0800          MOVS     r8,r0
;;;486    	if(f == NULL)	
000cc4  d059              BEQ      |L1.3450|
000cc6  f1ab0764          SUB      r7,r11,#0x64          ;472
                  |L1.3274|
;;;487    		return 0;
;;;488    	else
;;;489    	{
;;;490    		for(;;)
;;;491    		{
;;;492    			ch = fgetc(f);
000cca  4640              MOV      r0,r8
000ccc  f7fffffe          BL       fgetc
;;;493    
;;;494    			if(ch == EOF || cur_line >= 50)
000cd0  1c41              ADDS     r1,r0,#1
000cd2  d01b              BEQ      |L1.3340|
000cd4  2c32              CMP      r4,#0x32
000cd6  d219              BCS      |L1.3340|
;;;495    				break;
;;;496    			else
;;;497    			{
;;;498    				ptr[j] = ch;
000cd8  5578              STRB     r0,[r7,r5]
;;;499    				j++;
000cda  1c6d              ADDS     r5,r5,#1
;;;500    
;;;501    				if(ch == '\n')
000cdc  280a              CMP      r0,#0xa
000cde  d10f              BNE      |L1.3328|
;;;502    				{
;;;503    					j=0;
;;;504    					strcpy(lines[cur_line],ptr);
000ce0  eb0400c4          ADD      r0,r4,r4,LSL #3
000ce4  eb001004          ADD      r0,r0,r4,LSL #4
000ce8  2500              MOVS     r5,#0                 ;503
000cea  eb060080          ADD      r0,r6,r0,LSL #2
000cee  4639              MOV      r1,r7
000cf0  f7fffffe          BL       strcpy
;;;505    					memset(ptr,0,sizeof(ptr));
000cf4  2164              MOVS     r1,#0x64
000cf6  4638              MOV      r0,r7
000cf8  f7fffffe          BL       __aeabi_memclr4
;;;506    					cur_line++;	
000cfc  1c64              ADDS     r4,r4,#1
000cfe  b2e4              UXTB     r4,r4
                  |L1.3328|
;;;507    				}
;;;508    			}
;;;509    			wdt_feed();
000d00  21aa              MOVS     r1,#0xaa
000d02  f8891008          STRB     r1,[r9,#8]
000d06  f889a008          STRB     r10,[r9,#8]
000d0a  e7de              B        |L1.3274|
                  |L1.3340|
;;;510    		}
;;;511    		fclose(f);
000d0c  4640              MOV      r0,r8
000d0e  f7fffffe          BL       fclose
;;;512    	}
;;;513    
;;;514    	for(i=0;i<strlen(buf);i++)
000d12  2500              MOVS     r5,#0
000d14  46a8              MOV      r8,r5                 ;472
000d16  465f              MOV      r7,r11                ;474
000d18  e008              B        |L1.3372|
                  |L1.3354|
;;;515    		if(buf[i] == '\r' || buf[i] == '\n')
000d1a  5d78              LDRB     r0,[r7,r5]
000d1c  280d              CMP      r0,#0xd
000d1e  d001              BEQ      |L1.3364|
000d20  280a              CMP      r0,#0xa
000d22  d101              BNE      |L1.3368|
                  |L1.3364|
;;;516    			buf[i] = 0;
000d24  f8078005          STRB     r8,[r7,r5]
                  |L1.3368|
000d28  1c6d              ADDS     r5,r5,#1              ;514
000d2a  b2ed              UXTB     r5,r5                 ;514
                  |L1.3372|
000d2c  4638              MOV      r0,r7                 ;514
000d2e  f7fffffe          BL       strlen
000d32  42a8              CMP      r0,r5                 ;514
000d34  d8f1              BHI      |L1.3354|
;;;517    
;;;518    	memset(lines[num_line],0,sizeof(lines[num_line]));
000d36  f50d5080          ADD      r0,sp,#0x1000
000d3a  f8d00448          LDR      r0,[r0,#0x448]
000d3e  eb0001c0          ADD      r1,r0,r0,LSL #3
000d42  eb011000          ADD      r0,r1,r0,LSL #4
000d46  eb060580          ADD      r5,r6,r0,LSL #2
000d4a  2164              MOVS     r1,#0x64
000d4c  4628              MOV      r0,r5
000d4e  f7fffffe          BL       __aeabi_memclr4
;;;519    	strcpy(lines[num_line],buf);
000d52  4639              MOV      r1,r7
000d54  4628              MOV      r0,r5
000d56  f7fffffe          BL       strcpy
;;;520    	strcat(lines[num_line],"\r\n\0");
000d5a  a133              ADR      r1,|L1.3624|
000d5c  4628              MOV      r0,r5
000d5e  f7fffffe          BL       strcat
;;;521    
;;;522    	f = fopen(file,"w");
000d62  f50d5080          ADD      r0,sp,#0x1000
000d66  a131              ADR      r1,|L1.3628|
000d68  f8d00444          LDR      r0,[r0,#0x444]
000d6c  f7fffffe          BL       fopen
000d70  0005              MOVS     r5,r0
;;;523    	if(f == NULL)
000d72  d002              BEQ      |L1.3450|
;;;524    		return 0;
;;;525    
;;;526    	for(j=0;j<cur_line;j++)
000d74  2700              MOVS     r7,#0
000d76  46b0              MOV      r8,r6                 ;474
000d78  e022              B        |L1.3520|
                  |L1.3450|
000d7a  2000              MOVS     r0,#0                 ;524
                  |L1.3452|
;;;527    	{
;;;528    		fprintf(f,"%s",lines[j]);
;;;529    		if(strcmp(file,FILE_CFG_CFG))	//Imprime para debug se não for o arquivo cfg.cfg
;;;530    		{
;;;531    			printf("Write...Linha %u: %s",j,lines[j]);
;;;532    			fflush(stdout);
;;;533    		}
;;;534    	}
;;;535    	fclose(f);
;;;536    
;;;537    	return 1;
;;;538    }
000d7c  f20d4d4c          ADD      sp,sp,#0x44c
000d80  f50d5d80          ADD      sp,sp,#0x1000
000d84  e737              B        |L1.3062|
                  |L1.3462|
000d86  eb0700c7          ADD      r0,r7,r7,LSL #3       ;528
000d8a  eb001107          ADD      r1,r0,r7,LSL #4       ;528
000d8e  eb080681          ADD      r6,r8,r1,LSL #2       ;528
000d92  4632              MOV      r2,r6                 ;528
000d94  a126              ADR      r1,|L1.3632|
000d96  4628              MOV      r0,r5                 ;528
000d98  f7fffffe          BL       __2fprintf
000d9c  f6af116c          ADR      r1,|L1.1076|
000da0  f50d5080          ADD      r0,sp,#0x1000         ;529
000da4  f8d00444          LDR      r0,[r0,#0x444]        ;529
000da8  f7fffffe          BL       strcmp
000dac  b138              CBZ      r0,|L1.3518|
000dae  4632              MOV      r2,r6                 ;529
000db0  4639              MOV      r1,r7                 ;531
000db2  a020              ADR      r0,|L1.3636|
000db4  f7fffffe          BL       __2printf
000db8  480e              LDR      r0,|L1.3572|
000dba  f7fffffe          BL       fflush
                  |L1.3518|
000dbe  1c7f              ADDS     r7,r7,#1              ;526
                  |L1.3520|
000dc0  42a7              CMP      r7,r4                 ;526
000dc2  dbe0              BLT      |L1.3462|
000dc4  4628              MOV      r0,r5                 ;535
000dc6  f7fffffe          BL       fclose
000dca  2001              MOVS     r0,#1                 ;537
000dcc  e7d6              B        |L1.3452|
;;;539    /*----------------------------------------------------------------------------
                          ENDP

000dce  0000              DCW      0x0000
                  |L1.3536|
000dd0  5b544350          DCB      "[TCP Config via SD..Reiniciando]\r\r",0
000dd4  20436f6e
000dd8  66696720
000ddc  76696120
000de0  53442e2e
000de4  5265696e
000de8  69636961
000dec  6e646f5d
000df0  0d0d00  
000df3  00                DCB      0
                  |L1.3572|
                          DCD      __stdout
                  |L1.3576|
                          DCD      0x0003ffff
                  |L1.3580|
                          DCD      0x2009c000
                  |L1.3584|
000e00  5b534420          DCB      "[SD Card Inserido]\r",0
000e04  43617264
000e08  20496e73
000e0c  65726964
000e10  6f5d0d00
                  |L1.3604|
000e14  5b534420          DCB      "[SD Card Retirado]\r",0
000e18  43617264
000e1c  20526574
000e20  69726164
000e24  6f5d0d00
                  |L1.3624|
000e28  0d0a00            DCB      "\r\n",0
000e2b  00                DCB      0
                  |L1.3628|
000e2c  7700              DCB      "w",0
000e2e  00                DCB      0
000e2f  00                DCB      0
                  |L1.3632|
000e30  257300            DCB      "%s",0
000e33  00                DCB      0
                  |L1.3636|
000e34  57726974          DCB      "Write...Linha %u: %s",0
000e38  652e2e2e
000e3c  4c696e68
000e40  61202575
000e44  3a202573
000e48  00      
000e49  00                DCB      0
000e4a  00                DCB      0
000e4b  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  ||cfg||
                          %        142

                          AREA ||.data||, DATA, ALIGN=1

                  flag_sd_inserido
000000  01                DCB      0x01
                  flag_read_sd
000001  00                DCB      0x00
                  cnt_init_sd
000002  0000              DCB      0x00,0x00
                  cnt_type_dim
000004  0000              DCW      0x0000
                  type_dim0
000006  0000              DCB      0x00,0x00
000008  00                DCB      0x00
                  type_dim1
000009  000000            DCB      0x00,0x00,0x00
                  type_dim2
00000c  000000            DCB      0x00,0x00,0x00

                          AREA ||area_number.6||, DATA, ALIGN=1

                          EXPORTAS ||area_number.6||, ||.data||
                  word_val
000000  0000              DCB      0x00,0x00
