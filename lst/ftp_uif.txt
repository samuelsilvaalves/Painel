; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\out\ftp_uif.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\out\ftp_uif.d --cpu=Cortex-M3 --apcs=interwork -I.\inc -I.\inc\file_system -I.\inc\IR -IC:\Keil\ARM\RL\TCPnet\Drivers -I.\inc\tcpip -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -DLPC1700 -DFLASH_512 --omf_browse=.\out\ftp_uif.crf src\tcpip\FTP_uif.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  ftp_fopen PROC
;;;26     
;;;27     void *ftp_fopen (U8 *fname, U8 *mode) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;28     
;;;29     	memset(last_file_ftp,0,sizeof(last_file_ftp));
000006  211e              MOVS     r1,#0x1e
000008  4891              LDR      r0,|L1.592|
00000a  f7fffffe          BL       __aeabi_memclr4
;;;30     	strcpy(last_file_ftp,(const char*)fname);
00000e  4621              MOV      r1,r4
000010  488f              LDR      r0,|L1.592|
000012  f7fffffe          BL       strcpy
;;;31     
;;;32       	/* Open file 'fname' for reading or writing. Return file handle. */
;;;33       	return (fopen ((const char *)fname, (const char *)mode));
000016  4629              MOV      r1,r5
000018  4620              MOV      r0,r4
00001a  e8bd4070          POP      {r4-r6,lr}
00001e  f7ffbffe          B.W      fopen
;;;34     }
;;;35     
                          ENDP

                  ftp_fclose PROC
;;;38     
;;;39     void ftp_fclose (void *file) {
000022  f7ffbffe          B.W      fclose
;;;40       /* Close the file opened for reading or writing. */
;;;41       fclose (file);
;;;42     }
;;;43     
                          ENDP

                  ftp_fread PROC
;;;46     
;;;47     U16 ftp_fread (void *file, U8 *buf, U16 len) {
000026  4603              MOV      r3,r0
000028  b510              PUSH     {r4,lr}
00002a  4608              MOV      r0,r1
;;;48       /* Read 'len' bytes from file to buffer 'buf'. The file will be closed, */
;;;49       /* when the number of bytes read is less than 'len'. */
;;;50       return (fread (buf, 1, len, file));
00002c  2101              MOVS     r1,#1
00002e  f7fffffe          BL       fread
000032  b280              UXTH     r0,r0
;;;51     }
000034  bd10              POP      {r4,pc}
;;;52     
                          ENDP

                  ftp_fwrite PROC
;;;56     
;;;57     U16 ftp_fwrite (void *file, U8 *buf, U16 len) {
000036  e92d43f0          PUSH     {r4-r9,lr}
00003a  b089              SUB      sp,sp,#0x24
00003c  4607              MOV      r7,r0
00003e  4688              MOV      r8,r1
000040  4691              MOV      r9,r2
;;;58     
;;;59     	char i,str[30];
;;;60     
;;;61     	/*Bloco para verificar se houve alteração tcp via FTP*/
;;;62     	memset(str,0,sizeof(str));
000042  2120              MOVS     r1,#0x20
000044  4668              MOV      r0,sp
000046  f7fffffe          BL       __aeabi_memclr4
;;;63     	strcpy(str,FILE_TCP_CFG);
00004a  a182              ADR      r1,|L1.596|
00004c  4668              MOV      r0,sp
00004e  f7fffffe          BL       strcpy
;;;64     
;;;65     	for(i=0;i<strlen(last_file_ftp);i++)
000052  2400              MOVS     r4,#0
;;;66     		last_file_ftp[i] = toupper(last_file_ftp[i]);
000054  4d7e              LDR      r5,|L1.592|
000056  e005              B        |L1.100|
                  |L1.88|
000058  5d28              LDRB     r0,[r5,r4]
00005a  f7fffffe          BL       toupper
00005e  5528              STRB     r0,[r5,r4]
000060  1c64              ADDS     r4,r4,#1              ;65
000062  b2e4              UXTB     r4,r4                 ;65
                  |L1.100|
000064  487a              LDR      r0,|L1.592|
000066  f7fffffe          BL       strlen
00006a  42a0              CMP      r0,r4                 ;65
00006c  d8f4              BHI      |L1.88|
;;;67     
;;;68     	for(i=0;i<strlen(str);i++)
00006e  2400              MOVS     r4,#0
000070  466d              MOV      r5,sp                 ;59
000072  e005              B        |L1.128|
                  |L1.116|
;;;69     		str[i] = toupper (str[i]);
000074  5d28              LDRB     r0,[r5,r4]
000076  f7fffffe          BL       toupper
00007a  5528              STRB     r0,[r5,r4]
00007c  1c64              ADDS     r4,r4,#1              ;68
00007e  b2e4              UXTB     r4,r4                 ;68
                  |L1.128|
000080  4668              MOV      r0,sp                 ;68
000082  f7fffffe          BL       strlen
000086  42a0              CMP      r0,r4                 ;68
000088  d8f4              BHI      |L1.116|
;;;70     
;;;71     	if(strstr(last_file_ftp,str))
00008a  4669              MOV      r1,sp
00008c  4870              LDR      r0,|L1.592|
00008e  f7fffffe          BL       strstr
;;;72     		ftp_state.bit.UpdateTcp = __TRUE;
000092  4e73              LDR      r6,|L1.608|
000094  b118              CBZ      r0,|L1.158|
000096  7830              LDRB     r0,[r6,#0]  ; ftp_state
000098  f0400002          ORR      r0,r0,#2
00009c  7030              STRB     r0,[r6,#0]
                  |L1.158|
;;;73     	
;;;74     
;;;75     	/*Bloco para verificar se houve alteração das cenas via FTP*/
;;;76     	memset(str,0,sizeof(str));
00009e  2120              MOVS     r1,#0x20
0000a0  4668              MOV      r0,sp
0000a2  f7fffffe          BL       __aeabi_memclr4
;;;77     	strcpy(str,"SCENE");
0000a6  a16f              ADR      r1,|L1.612|
0000a8  4668              MOV      r0,sp
0000aa  f7fffffe          BL       strcpy
;;;78     
;;;79     	for(i=0;i<strlen(str);i++)
0000ae  2400              MOVS     r4,#0
0000b0  e005              B        |L1.190|
                  |L1.178|
;;;80     		str[i] = toupper (str[i]);
0000b2  5d28              LDRB     r0,[r5,r4]
0000b4  f7fffffe          BL       toupper
0000b8  5528              STRB     r0,[r5,r4]
0000ba  1c64              ADDS     r4,r4,#1              ;79
0000bc  b2e4              UXTB     r4,r4                 ;79
                  |L1.190|
0000be  4668              MOV      r0,sp                 ;79
0000c0  f7fffffe          BL       strlen
0000c4  42a0              CMP      r0,r4                 ;79
0000c6  d8f4              BHI      |L1.178|
;;;81     	
;;;82     	if(strstr(last_file_ftp,str))
0000c8  4669              MOV      r1,sp
0000ca  4861              LDR      r0,|L1.592|
0000cc  f7fffffe          BL       strstr
0000d0  b118              CBZ      r0,|L1.218|
;;;83     		ftp_state.bit.UpdateScene = __TRUE;
0000d2  7830              LDRB     r0,[r6,#0]  ; ftp_state
0000d4  f0400001          ORR      r0,r0,#1
0000d8  7030              STRB     r0,[r6,#0]
                  |L1.218|
;;;84     
;;;85     	/*Bloco para verificar se houve alteração das configurações via FTP*/
;;;86     	memset(str,0,sizeof(str));
0000da  2120              MOVS     r1,#0x20
0000dc  4668              MOV      r0,sp
0000de  f7fffffe          BL       __aeabi_memclr4
;;;87     	strcpy(str,"CFG.CFG");
0000e2  a162              ADR      r1,|L1.620|
0000e4  4668              MOV      r0,sp
0000e6  f7fffffe          BL       strcpy
;;;88     
;;;89     	for(i=0;i<strlen(str);i++)
0000ea  2400              MOVS     r4,#0
0000ec  e005              B        |L1.250|
                  |L1.238|
;;;90     		str[i] = toupper (str[i]);
0000ee  5d28              LDRB     r0,[r5,r4]
0000f0  f7fffffe          BL       toupper
0000f4  5528              STRB     r0,[r5,r4]
0000f6  1c64              ADDS     r4,r4,#1              ;89
0000f8  b2e4              UXTB     r4,r4                 ;89
                  |L1.250|
0000fa  4668              MOV      r0,sp                 ;89
0000fc  f7fffffe          BL       strlen
000100  42a0              CMP      r0,r4                 ;89
000102  d8f4              BHI      |L1.238|
;;;91     	
;;;92     	if(strstr(last_file_ftp,str))
000104  4669              MOV      r1,sp
000106  4852              LDR      r0,|L1.592|
000108  f7fffffe          BL       strstr
00010c  b118              CBZ      r0,|L1.278|
;;;93     		ftp_state.bit.UpdateFileCfg = __TRUE;
00010e  7830              LDRB     r0,[r6,#0]  ; ftp_state
000110  f0400004          ORR      r0,r0,#4
000114  7030              STRB     r0,[r6,#0]
                  |L1.278|
;;;94       	
;;;95     	//printf("Open File FTP: %s\rWrite FTP\r",last_file_ftp);
;;;96     	//fflush(stdout);
;;;97     
;;;98     	/* Write 'len' bytes from buffer 'buf' to a file. */
;;;99       	return (fwrite (buf, 1, len, file));
000116  463b              MOV      r3,r7
000118  464a              MOV      r2,r9
00011a  2101              MOVS     r1,#1
00011c  4640              MOV      r0,r8
00011e  f7fffffe          BL       fwrite
;;;100    }
000122  b009              ADD      sp,sp,#0x24
000124  b280              UXTH     r0,r0                 ;99
000126  e8bd83f0          POP      {r4-r9,pc}
;;;101    
                          ENDP

                  ftp_fdelete PROC
;;;104    
;;;105    BOOL ftp_fdelete (U8 *fname) {
00012a  b510              PUSH     {r4,lr}
;;;106      /* Delete a file, return __TRUE on success. */
;;;107      if (fdelete((char *)fname) == 0) {
00012c  f7fffffe          BL       fdelete
000130  b108              CBZ      r0,|L1.310|
;;;108        return (__TRUE);
;;;109      }
;;;110      return (__FALSE);
000132  2000              MOVS     r0,#0
;;;111    }
000134  bd10              POP      {r4,pc}
                  |L1.310|
000136  2001              MOVS     r0,#1                 ;108
000138  bd10              POP      {r4,pc}
;;;112    
                          ENDP

                  ftp_frename PROC
;;;115    
;;;116    BOOL ftp_frename (U8 *fname, U8 *newn) {
00013a  b510              PUSH     {r4,lr}
;;;117      /* Rename a file, return __TRUE on success. */
;;;118      if (frename((char *)fname, (char *)newn) == 0) {
00013c  f7fffffe          BL       frename
000140  b108              CBZ      r0,|L1.326|
;;;119        return (__TRUE);
;;;120      }
;;;121      return (__FALSE);
000142  2000              MOVS     r0,#0
;;;122    }
000144  bd10              POP      {r4,pc}
                  |L1.326|
000146  2001              MOVS     r0,#1                 ;119
000148  bd10              POP      {r4,pc}
;;;123    
                          ENDP

                  ftp_ffind PROC
;;;126    
;;;127    U16 ftp_ffind (U8 code, U8 *buf, U8 *mask, U16 buflen) {
00014a  e92d43f8          PUSH     {r3-r9,lr}
;;;128      /* This function is called by the FTP server to find file names and other */
;;;129      /* file information. The output data is stored in ascii format to output  */
;;;130      /* buffer 'buf' Parameter 'code' specifies requested file information.    */
;;;131      /* Values for 'code':                                                     */
;;;132      /*    0 - read file size                                                  */
;;;133      /*    1 - read last-modified time of a file                               */
;;;134      /*    2 - list file names only (first call)                               */
;;;135      /*    3 - list file directory in extended format (first call)             */
;;;136      /*    4 - list file names only (repeated call)                            */
;;;137      /*    5 - list file directory in extended format (repeated call)          */
;;;138      static FINFO info;
;;;139      U32 rlen,v;
;;;140      U8 *tp;
;;;141    
;;;142      if (code < 4) {
;;;143        /* First call to ffind, initialize the info. */
;;;144        info.fileID = 0;
00014e  4e49              LDR      r6,|L1.628|
000150  4607              MOV      r7,r0                 ;127
000152  460c              MOV      r4,r1                 ;127
000154  4690              MOV      r8,r2                 ;127
000156  2804              CMP      r0,#4                 ;142
000158  d202              BCS      |L1.352|
00015a  2000              MOVS     r0,#0
00015c  f8a60104          STRH     r0,[r6,#0x104]
                  |L1.352|
;;;145      }
;;;146    
;;;147      rlen = 0;
000160  2500              MOVS     r5,#0
                  |L1.354|
;;;148    next:
;;;149      if (ffind ((char *)mask, &info) == 0) {
000162  4944              LDR      r1,|L1.628|
000164  4640              MOV      r0,r8
000166  f7fffffe          BL       ffind
00016a  2800              CMP      r0,#0
00016c  d16d              BNE      |L1.586|
;;;150        /* File found, print file information. */
;;;151        if (info.name[0] == '.') {
00016e  7830              LDRB     r0,[r6,#0]  ; info
000170  282e              CMP      r0,#0x2e
000172  d108              BNE      |L1.390|
;;;152          if ((info.name[1] == 0) || (info.name[1] == '.' && info.name[2]) == 0) {
000174  f9960001          LDRSB    r0,[r6,#1]  ; info
000178  2800              CMP      r0,#0
00017a  d0f2              BEQ      |L1.354|
00017c  282e              CMP      r0,#0x2e
00017e  d1f0              BNE      |L1.354|
000180  78b0              LDRB     r0,[r6,#2]  ; info
000182  2800              CMP      r0,#0
000184  d0ed              BEQ      |L1.354|
                  |L1.390|
;;;153            /* Ignore the '.' and '..' folders. */
;;;154            goto next;
;;;155          }
;;;156        }
;;;157        switch (code) {
000186  2f06              CMP      r7,#6
000188  d25f              BCS      |L1.586|
00018a  e8dff007          TBB      [pc,r7]
00018e  0307              DCB      0x03,0x07
000190  1b221b22          DCB      0x1b,0x22,0x1b,0x22
;;;158          case 0:
;;;159            /* Return file size as decimal number. */
;;;160            rlen = sprintf ((char *)buf,"%d\r\n", info.size);
000194  a138              ADR      r1,|L1.632|
;;;161            break;
000196  f8d62100          LDR      r2,[r6,#0x100]  ; info
00019a  e015              B        |L1.456|
00019c  f5067684          ADD      r6,r6,#0x108
;;;162    
;;;163          case 1:
;;;164            /* Return last-modified time in format "YYYYMMDDhhmmss". */
;;;165            rlen  = sprintf ((char *)buf,"%04d%02d%02d",
0001a0  a137              ADR      r1,|L1.640|
0001a2  78f0              LDRB     r0,[r6,#3]  ; info
0001a4  9000              STR      r0,[sp,#0]
0001a6  7933              LDRB     r3,[r6,#4]  ; info
0001a8  88f2              LDRH     r2,[r6,#6]  ; info
0001aa  4620              MOV      r0,r4
0001ac  f7fffffe          BL       __2sprintf
0001b0  4605              MOV      r5,r0
;;;166                             info.time.year, info.time.mon, info.time.day);
;;;167            rlen += sprintf ((char *)&buf[rlen],"%02d%02d%02d\r\n",
0001b2  78b0              LDRB     r0,[r6,#2]  ; info
0001b4  9000              STR      r0,[sp,#0]
0001b6  7873              LDRB     r3,[r6,#1]  ; info
0001b8  7832              LDRB     r2,[r6,#0]  ; info
0001ba  1960              ADDS     r0,r4,r5
0001bc  a134              ADR      r1,|L1.656|
0001be  f7fffffe          BL       __2sprintf
;;;168                             info.time.hr, info.time.min, info.time.sec);
;;;169            break;
0001c2  e041              B        |L1.584|
;;;170    
;;;171          case 2:
;;;172          case 4:
;;;173            /* List file names only. */
;;;174            rlen = sprintf ((char *)buf,"%s\r\n", info.name);
0001c4  4a2b              LDR      r2,|L1.628|
0001c6  a136              ADR      r1,|L1.672|
                  |L1.456|
0001c8  4620              MOV      r0,r4
0001ca  f7fffffe          BL       __2sprintf
0001ce  4605              MOV      r5,r0
0001d0  e03b              B        |L1.586|
;;;175            break;
;;;176    
;;;177          case 3:
;;;178          case 5:
;;;179            /* List directory in extended format. */
;;;180            rlen  = sprintf ((char *)buf,"%02d-%02d-%02d", 
0001d2  f8b6010e          LDRH     r0,[r6,#0x10e]  ; info
0001d6  2164              MOVS     r1,#0x64
0001d8  fbb0f2f1          UDIV     r2,r0,r1
0001dc  fb010012          MLS      r0,r1,r2,r0
0001e0  9000              STR      r0,[sp,#0]
0001e2  f896310b          LDRB     r3,[r6,#0x10b]  ; info
0001e6  f896210c          LDRB     r2,[r6,#0x10c]  ; info
0001ea  a12f              ADR      r1,|L1.680|
0001ec  4620              MOV      r0,r4
0001ee  f7fffffe          BL       __2sprintf
0001f2  4605              MOV      r5,r0
;;;181                             info.time.mon, info.time.day, info.time.year%100);
;;;182            /* Convert time to "AM/PM" format. */
;;;183            v = info.time.hr % 12;
0001f4  f8960108          LDRB     r0,[r6,#0x108]  ; info
0001f8  210c              MOVS     r1,#0xc
0001fa  fbb0f2f1          UDIV     r2,r0,r1
0001fe  fb010212          MLS      r2,r1,r2,r0
;;;184            if (v == 0) v = 12;
000202  b902              CBNZ     r2,|L1.518|
000204  220c              MOVS     r2,#0xc
                  |L1.518|
;;;185            if (info.time.hr < 12) tp = "AM";
000206  280c              CMP      r0,#0xc
000208  d201              BCS      |L1.526|
00020a  a02b              ADR      r0,|L1.696|
00020c  e000              B        |L1.528|
                  |L1.526|
;;;186            else                   tp = "PM";
00020e  a02b              ADR      r0,|L1.700|
                  |L1.528|
;;;187            rlen += sprintf ((char *)&buf[rlen],"  %02d:%02d%s",v,info.time.min,tp);
000210  9000              STR      r0,[sp,#0]
000212  f8963109          LDRB     r3,[r6,#0x109]  ; info
000216  1960              ADDS     r0,r4,r5
000218  a129              ADR      r1,|L1.704|
00021a  f7fffffe          BL       __2sprintf
00021e  4405              ADD      r5,r5,r0
;;;188            if (info.attrib & ATTR_DIRECTORY) {
000220  f8960106          LDRB     r0,[r6,#0x106]  ; info
000224  06c0              LSLS     r0,r0,#27
000226  d503              BPL      |L1.560|
;;;189              rlen += sprintf ((char *)&buf[rlen],"%-21s","       <DIR>");
000228  1960              ADDS     r0,r4,r5
00022a  a229              ADR      r2,|L1.720|
00022c  a12c              ADR      r1,|L1.736|
00022e  e003              B        |L1.568|
                  |L1.560|
;;;190            }
;;;191            else {
;;;192              rlen += sprintf ((char *)&buf[rlen],"%21d", info.size);
000230  1960              ADDS     r0,r4,r5
000232  a12d              ADR      r1,|L1.744|
000234  f8d62100          LDR      r2,[r6,#0x100]  ; info
                  |L1.568|
000238  f7fffffe          BL       __2sprintf
00023c  4405              ADD      r5,r5,r0
;;;193            }
;;;194            rlen += sprintf ((char *)&buf[rlen]," %s\r\n", info.name);
00023e  1960              ADDS     r0,r4,r5
000240  4a0c              LDR      r2,|L1.628|
000242  a12b              ADR      r1,|L1.752|
000244  f7fffffe          BL       __2sprintf
                  |L1.584|
000248  4405              ADD      r5,r5,r0
                  |L1.586|
;;;195            break;
;;;196        }
;;;197      }
;;;198      return (rlen);
00024a  b2a8              UXTH     r0,r5
;;;199    }
00024c  e8bd83f8          POP      {r3-r9,pc}
;;;200    
                          ENDP

                  |L1.592|
                          DCD      ||.bss||+0x110
                  |L1.596|
000254  7463702e          DCB      "tcp.cfg",0
000258  63666700
00025c  00                DCB      0
00025d  00                DCB      0
00025e  00                DCB      0
00025f  00                DCB      0
                  |L1.608|
                          DCD      ftp_state
                  |L1.612|
000264  5343454e          DCB      "SCENE",0
000268  4500    
00026a  00                DCB      0
00026b  00                DCB      0
                  |L1.620|
00026c  4346472e          DCB      "CFG.CFG",0
000270  43464700
                  |L1.628|
                          DCD      ||.bss||
                  |L1.632|
000278  25640d0a          DCB      "%d\r\n",0
00027c  00      
00027d  00                DCB      0
00027e  00                DCB      0
00027f  00                DCB      0
                  |L1.640|
000280  25303464          DCB      "%04d%02d%02d",0
000284  25303264
000288  25303264
00028c  00      
00028d  00                DCB      0
00028e  00                DCB      0
00028f  00                DCB      0
                  |L1.656|
000290  25303264          DCB      "%02d%02d%02d\r\n",0
000294  25303264
000298  25303264
00029c  0d0a00  
00029f  00                DCB      0
                  |L1.672|
0002a0  25730d0a          DCB      "%s\r\n",0
0002a4  00      
0002a5  00                DCB      0
0002a6  00                DCB      0
0002a7  00                DCB      0
                  |L1.680|
0002a8  25303264          DCB      "%02d-%02d-%02d",0
0002ac  2d253032
0002b0  642d2530
0002b4  326400  
0002b7  00                DCB      0
                  |L1.696|
0002b8  414d00            DCB      "AM",0
0002bb  00                DCB      0
                  |L1.700|
0002bc  504d00            DCB      "PM",0
0002bf  00                DCB      0
                  |L1.704|
0002c0  20202530          DCB      "  %02d:%02d%s",0
0002c4  32643a25
0002c8  30326425
0002cc  7300    
0002ce  00                DCB      0
0002cf  00                DCB      0
                  |L1.720|
0002d0  20202020          DCB      "       <DIR>",0
0002d4  2020203c
0002d8  4449523e
0002dc  00      
0002dd  00                DCB      0
0002de  00                DCB      0
0002df  00                DCB      0
                  |L1.736|
0002e0  252d3231          DCB      "%-21s",0
0002e4  7300    
0002e6  00                DCB      0
0002e7  00                DCB      0
                  |L1.744|
0002e8  25323164          DCB      "%21d",0
0002ec  00      
0002ed  00                DCB      0
0002ee  00                DCB      0
0002ef  00                DCB      0
                  |L1.752|
0002f0  2025730d          DCB      " %s\r\n",0
0002f4  0a00    
0002f6  00                DCB      0
0002f7  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  info
                          %        272
                  last_file_ftp
                          %        30
